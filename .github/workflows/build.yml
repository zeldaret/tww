name: Build

on:
  push:
  pull_request:

permissions:
  contents: read
  packages: read
  pages: write
  id-token: write

jobs:
  build:
    container:
      image: ghcr.io/zeldaret/tww-build:main
      options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [GZLE01]

    steps:
    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # Set Git config
    - name: Git config
      run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

    # Copy the original files to the workspace
    - name: Prepare
      run: |
        # apk add --no-cache gdb
        cp -R /orig .
        mkdir -p /compilers/GC/1.3.2x
        cp /compilers/GC/1.3.2/* /compilers/GC/1.3.2x/
        # Add code for raise(getpid(), SIGSTOP)
        # printf '\xB8\x14\x00\x00\x00\xCD\x80\x89\xC3\xB9\x13\x00\x00\x00\xB8\x25\x00\x00\x00\xCD\x80' | dd of=/compilers/GC/1.3.2x/mwcceppc.exe bs=1 seek=$((0x433fc8 - 0x401000 + 0x400)) conv=notrunc
        # No-op patch, for testing
        printf '\x6A\x00\xFF\xB4' | dd of=/compilers/GC/1.3.2x/mwcceppc.exe bs=1 seek=$((0x433fc8 - 0x401000 + 0x400)) conv=notrunc

    # Build the project
    - name: Build
      run: |
        # ./watcher.sh &
        python configure.py --map --version ${{ matrix.version }} \
            --binutils /binutils --compilers /compilers
        ninja diff
        ninja all_source build/${{ matrix.version }}/progress.json \
            build/${{ matrix.version }}/report.json

    - name: Objdump
      if: failure()
      run: /binutils/powerpc-eabi-objdump -d build/GZLE01/src/JSystem/JUtility/JUTXfb.o

    # Upload core dump
    # - name: Upload core
    #   if: failure()
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: core-dump
    #     path: /cores
