//
// Generated by dtk
// Translation Unit: d_a_alldie.cpp
//

#include "d/actor/d_a_alldie.h"
#include "d/d_com_inf_game.h"
#include "d/d_procname.h"
#include "f_op/f_op_actor_mng.h"

enum {
    ACT_WAIT,
    ACT_CHECK,
    ACT_TIMER,
};

/* 00000078-00000084       .text getSwbit__10daAlldie_cFv */
u8 daAlldie_c::getSwbit() {
    return fopAcM_GetParam(this) >> 0x8;
}

/* 00000084-0000008C       .text actionWait__10daAlldie_cFv */
BOOL daAlldie_c::actionWait() {
    return TRUE;
}

/* 0000008C-000000D8       .text actionCheck__10daAlldie_cFv */
BOOL daAlldie_c::actionCheck() {
    if (!fopAcM_myRoomSearchEnemy(fopAcM_GetRoomNo(this))) {
        setActio(ACT_TIMER);
        mTimer = 65;
    }

    return TRUE;
}

/* 000000D8-0000016C       .text actionTimer__10daAlldie_cFv */
BOOL daAlldie_c::actionTimer() {
    if (fopAcM_myRoomSearchEnemy(fopAcM_GetRoomNo(this))) {
        setActio(ACT_CHECK);
    } else if (mTimer > 0) {
        mTimer--;
    } else {
        setActio(ACT_WAIT);
        dComIfGs_onSwitch(getSwbit(), fopAcM_GetRoomNo(this));
    }
    return TRUE;
}

/* 0000016C-000001BC       .text execute__10daAlldie_cFv */
BOOL daAlldie_c::execute() {
    switch (mAction) {
    case ACT_CHECK:
        actionCheck();
        break;
    case ACT_TIMER:
        actionTimer();
        break;
    default:
        actionWait();
        break;
    }

    return TRUE;
}

cPhs_State daAlldie_c::create() {
    fopAcM_SetupActor(this, daAlldie_c);

    if (!dComIfGs_isSwitch(getSwbit(), fopAcM_GetRoomNo(this))) {
        setActio(ACT_CHECK);
    } else {
        setActio(ACT_WAIT);
    }

    shape_angle.z = 0;
    shape_angle.x = 0;
    current.angle.z = 0;
    current.angle.x = 0;

    return cPhs_COMPLEATE_e;
}

/* 000001BC-000001C4       .text daAlldie_Draw__FP10daAlldie_c */
static BOOL daAlldie_Draw(daAlldie_c*) {
    return TRUE;
}

/* 000001C4-000001E8       .text daAlldie_Execute__FP10daAlldie_c */
static BOOL daAlldie_Execute(daAlldie_c* i_this) {
    i_this->execute();
    return TRUE;
}

/* 000001E8-000001F0       .text daAlldie_IsDelete__FP10daAlldie_c */
static BOOL daAlldie_IsDelete(daAlldie_c*) {
    return TRUE;
}

/* 000001F0-00000220       .text daAlldie_Delete__FP10daAlldie_c */
static BOOL daAlldie_Delete(daAlldie_c* i_this) {
    i_this->~daAlldie_c();
    return TRUE;
}

/* 00000220-000002CC       .text daAlldie_Create__FP10fopAc_ac_c */
static cPhs_State daAlldie_Create(fopAc_ac_c* ac) {
    return ((daAlldie_c*)ac)->create();
}

static actor_method_class l_daAlldie_Method = {
    (process_method_func)daAlldie_Create,
    (process_method_func)daAlldie_Delete,
    (process_method_func)daAlldie_Execute,
    (process_method_func)daAlldie_IsDelete,
    (process_method_func)daAlldie_Draw,
};

actor_process_profile_definition g_profile_ALLDIE = {
    /* LayerID      */ fpcLy_CURRENT_e,
    /* ListID       */ 0x0002,
    /* ListPrio     */ fpcPi_CURRENT_e,
    /* ProcName     */ PROC_ALLDIE,
    /* Proc SubMtd  */ &g_fpcLf_Method.base,
    /* Size         */ sizeof(daAlldie_c),
    /* SizeOther    */ 0,
    /* Parameters   */ 0,
    /* Leaf SubMtd  */ &g_fopAc_Method.base,
    /* Priority     */ 0x011D,
    /* Actor SubMtd */ &l_daAlldie_Method,
    /* Status       */ fopAcStts_UNK4000_e | fopAcStts_UNK40000_e,
    /* Group        */ fopAc_ACTOR_e,
    /* CullType     */ fopAc_CULLBOX_6_e,
};
