//
// Generated by dtk
// Translation Unit: d_a_dai_item.cpp
//

#include "d/actor/d_a_dai_item.h"
#include "d/d_kankyo_wether.h"
#include "d/d_procname.h"

/* 800E3638-800E36C8       .text convItemNo__FUc */
static u32 convItemNo(u8) {
    /* Nonmatching */
}

/* 800E36C8-800E3798       .text _delete__13daStandItem_cFv */
bool daStandItem_c::_delete() {
    /* Nonmatching */
}

/* 800E3798-800E37B8       .text CheckCreateHeap__FP10fopAc_ac_c */
static BOOL CheckCreateHeap(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 800E37B8-800E3AF8       .text CreateHeap__13daStandItem_cFv */
void daStandItem_c::CreateHeap() {
    /* Nonmatching */
}

/* 800E3AF8-800E3E94       .text CreateInit__13daStandItem_cFv */
void daStandItem_c::CreateInit() {
    /* Nonmatching */
}

/* 800E3E94-800E4048       .text _create__13daStandItem_cFv */
s32 daStandItem_c::_create() {
    /* Nonmatching */
}

/* 800E4114-800E443C       .text set_mtx__13daStandItem_cFv */
void daStandItem_c::set_mtx() {
    /* Nonmatching */
}

/* 800E443C-800E44A4       .text _execute__13daStandItem_cFv */
bool daStandItem_c::_execute() {
    mTimer++;
    execAction();
    itemProc();
    set_mtx();
    if (mpCloth != NULL)
        mpCloth->cloth_move();
    return true;
}

/* 800E44A4-800E4518       .text itemProc__13daStandItem_cFv */
void daStandItem_c::itemProc() {
    /* Nonmatching */
}

/* 800E4518-800E453C       .text actionFobj00__13daStandItem_cFv */
bool daStandItem_c::actionFobj00() {
    animTest();
    return true;
}

/* 800E453C-800E4560       .text actionFobj01__13daStandItem_cFv */
bool daStandItem_c::actionFobj01() {
    animTest();
    return true;
}

/* 800E4560-800E4584       .text actionFobj02__13daStandItem_cFv */
bool daStandItem_c::actionFobj02() {
    animTest();
    return true;
}

/* 800E4584-800E458C       .text actionFobj03__13daStandItem_cFv */
bool daStandItem_c::actionFobj03() {
    return true;
}

/* 800E458C-800E4594       .text actionFobj04__13daStandItem_cFv */
bool daStandItem_c::actionFobj04() {
    return true;
}

/* 800E4594-800E45E0       .text actionFobj05__13daStandItem_cFv */
bool daStandItem_c::actionFobj05() {
    f32 windPow = dKyw_get_wind_pow();
    if (mpBckAnm != NULL && windPow > 0.0f)
        mpBckAnm->play();
    return true;
}

/* 800E45E0-800E4770       .text actionFobj06__13daStandItem_cFv */
bool daStandItem_c::actionFobj06() {
    /* Nonmatching */
}

/* 800E4770-800E47BC       .text actionFobj07__13daStandItem_cFv */
bool daStandItem_c::actionFobj07() {
    f32 windPow = dKyw_get_wind_pow();
    if (mpBckAnm != NULL && windPow > 0.0f)
        mpBckAnm->play();
    return true;
}

/* 800E47BC-800E47E0       .text actionFobj08__13daStandItem_cFv */
bool daStandItem_c::actionFobj08() {
    animTest();
    return true;
}

/* 800E47E0-800E4B94       .text actionFobj09__13daStandItem_cFv */
bool daStandItem_c::actionFobj09() {
    /* Nonmatching */
}

/* 800E4B94-800E4BB8       .text actionFobj10__13daStandItem_cFv */
bool daStandItem_c::actionFobj10() {
    animTest();
    return true;
}

/* 800E4BB8-800E4BE4       .text actionFobj11__13daStandItem_cFv */
bool daStandItem_c::actionFobj11() {
    mBckSpeed = 1.0f;
    animTest();
    return true;
}

/* 800E4BE4-800E4E44       .text animTest__13daStandItem_cFv */
void daStandItem_c::animTest() {
    /* Nonmatching */
}

/* 800E4E44-800E509C       .text animTestForOneTime__13daStandItem_cFv */
void daStandItem_c::animTestForOneTime() {
    /* Nonmatching */
}

/* 800E509C-800E5190       .text execAction__13daStandItem_cFv */
void daStandItem_c::execAction() {
    /* Nonmatching */
}

/* 800E5190-800E51D8       .text mode_carry_init__13daStandItem_cFv */
void daStandItem_c::mode_carry_init() {
    /* Nonmatching */
}

/* 800E51D8-800E5204       .text mode_carry__13daStandItem_cFv */
void daStandItem_c::mode_carry() {
    /* Nonmatching */
}

/* 800E5204-800E5230       .text mode_wait_init__13daStandItem_cFv */
void daStandItem_c::mode_wait_init() {
    /* Nonmatching */
}

/* 800E5230-800E5234       .text mode_wait__13daStandItem_cFv */
void daStandItem_c::mode_wait() {
}

/* 800E5234-800E5240       .text mode_drop_init__13daStandItem_cFv */
void daStandItem_c::mode_drop_init() {
    /* Nonmatching */
}

/* 800E5240-800E52D0       .text mode_drop__13daStandItem_cFv */
void daStandItem_c::mode_drop() {
    /* Nonmatching */
}

/* 800E52D0-800E53B8       .text _draw__13daStandItem_cFv */
bool daStandItem_c::_draw() {
    /* Nonmatching */
}

/* 800E53B8-800E53D8       .text daStandItem_Create__FPv */
static s32 daStandItem_Create(void* i_this) {
    return ((daStandItem_c*)i_this)->_create();
}

/* 800E53D8-800E53FC       .text daStandItem_Delete__FPv */
static BOOL daStandItem_Delete(void* i_this) {
    return ((daStandItem_c*)i_this)->_delete();
}

/* 800E53FC-800E5420       .text daStandItem_Draw__FPv */
static BOOL daStandItem_Draw(void* i_this) {
    return ((daStandItem_c*)i_this)->_draw();
}

/* 800E5420-800E5444       .text daStandItem_Execute__FPv */
static BOOL daStandItem_Execute(void* i_this) {
    return ((daStandItem_c*)i_this)->_execute();
}

/* 800E5444-800E544C       .text daStandItem_IsDelete__FPv */
static BOOL daStandItem_IsDelete(void* i_this) {
    return TRUE;
}

static actor_method_class daStandItemMethodTable = {
    (process_method_func)daStandItem_Create,
    (process_method_func)daStandItem_Delete,
    (process_method_func)daStandItem_Execute,
    (process_method_func)daStandItem_IsDelete,
    (process_method_func)daStandItem_Draw,
};

actor_process_profile_definition g_profile_STANDITEM = {
    /* LayerID      */ fpcLy_CURRENT_e,
    /* ListID       */ 0x0008,
    /* ListPrio     */ fpcPi_CURRENT_e,
    /* ProcName     */ PROC_STANDITEM,
    /* Proc SubMtd  */ &g_fpcLf_Method.base,
    /* Size         */ sizeof(daStandItem_c),
    /* SizeOther    */ 0,
    /* Parameters   */ 0,
    /* Leaf SubMtd  */ &g_fopAc_Method.base,
    /* Priority     */ 0x0101,
    /* Actor SubMtd */ &daStandItemMethodTable,
    /* Status       */ fopAcStts_NOCULLEXEC_e | fopAcStts_CULL_e | fopAcStts_UNK4000_e | fopAcStts_UNK40000_e,
    /* Group        */ fopAc_ACTOR_e,
    /* CullType     */ fopAc_CULLBOX_CUSTOM_e,
};
