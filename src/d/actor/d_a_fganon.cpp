//
// Generated by dtk
// Translation Unit: d_a_fganon.cpp
//

#include "d/actor/d_a_fganon.h"
#include "d/d_procname.h"
#include "d/d_com_inf_game.h"
#include "m_Do/m_Do_hostIO.h"
#include "d/d_s_play.h"
#include "m_Do/m_Do_audio.h"
#include "d/d_camera.h"
#include "d/d_snap.h"
#include "d/res/res_fganon.h"
#include "d/res/res_pgsw.h"
#include "d/d_bg_s_lin_chk.h"
#include "d/actor/d_a_mant.h"

#include "weak_bss_936_to_1036.h" // IWYU pragma: keep

static u32 jno[2] = {0x7, 0xD};
static u16 eno[2] = {0x81CD, 0x81CC};

static dCcD_SrcCyl cc_cyl_src = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ ~(AT_TYPE_UNK1000 | AT_TYPE_UNK2000 | AT_TYPE_STALFOS_MACE),
        /* SrcObjAt  Atp     */ 0,
        /* SrcObjAt  SPrm    */ 0,
        /* SrcObjTg  Type    */ 0,
        /* SrcObjTg  SPrm    */ 0,
        /* SrcObjCo  SPrm    */ cCcD_CoSPrm_Set_e | cCcD_CoSPrm_IsOther_e | cCcD_CoSPrm_VsEnemy_e | cCcD_CoSPrm_VsPlayer_e | cCcD_CoSPrm_VsOther_e,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ 0,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ cCcD_TgSPrm_IsPlayer_e,
        /* SrcGObjCo SPrm    */ 0,
    },
    // cM3dGCylS
    {
        /* Center */ 0.0f, -150.0f, 0.0f,
        /* Radius */ 100.0f,
        /* Height */ 100.0f,
    },
};

static dCcD_SrcSph wepon_sph_src = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ 0,
        /* SrcObjAt  Atp     */ 0,
        /* SrcObjAt  SPrm    */ cCcD_AtSPrm_Set_e | cCcD_AtSPrm_VsPlayer_e,
        /* SrcObjTg  Type    */ ~(AT_TYPE_UNK1000 | AT_TYPE_UNK2000 | AT_TYPE_STALFOS_MACE),
        /* SrcObjCo  SPrm    */ 0,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ 0,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ 0,
        /* SrcGObjCo SPrm    */ 0,
    },
    // cM3dGSphS
    {
        /* Center */ 0.0f, 0.0f, 0.0f,
        /* Radius */ 90.0f,
    },
};

static dCcD_SrcSph ball_tg_sph_src = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ 0,
        /* SrcObjAt  Atp     */ 0,
        /* SrcObjAt  SPrm    */ cCcD_AtSPrm_Set_e | cCcD_AtSPrm_VsPlayer_e,
        /* SrcObjTg  Type    */ AT_TYPE_HOOKSHOT,
        /* SrcObjTg  SPrm    */ cCcD_TgSPrm_Set_e | cCcD_TgSPrm_IsEnemy_e,
        /* SrcObjCo  SPrm    */ 0,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ 0,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ 0,
        /* SrcGObjCo SPrm    */ 0,
    },
    // cM3dGSphS
    {
        /* Center */ 0.0f, 0.0f, 0.0f,
        /* Radius */ 90.0f,
    },
};

static dCcD_SrcSph ball_at_sph_src = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ 0,
        /* SrcObjAt  Atp     */ 0,
        /* SrcObjAt  SPrm    */ cCcD_AtSPrm_Set_e | cCcD_AtSPrm_VsPlayer_e,
        /* SrcObjTg  Type    */ ~(AT_TYPE_WATER | AT_TYPE_UNK20000 | AT_TYPE_WIND | AT_TYPE_UNK400000 | AT_TYPE_LIGHT),
        /* SrcObjTg  SPrm    */ cCcD_TgSPrm_Set_e | cCcD_TgSPrm_IsEnemy_e,
        /* SrcObjCo  SPrm    */ 0,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ 0,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ 0,
        /* SrcGObjCo SPrm    */ 0,
    },
    // cM3dGSphS
    {
        /* Center */ 0.0f, 0.0f, 0.0f,
        /* Radius */ 200.0f,
    },
};

fganon_class* master;
u8 hio_set;
daFganon_HIO_c l_HIO;

/* 000000EC-000001A0       .text __ct__14daFganon_HIO_cFv */
daFganon_HIO_c::daFganon_HIO_c() {
    mNo = -0x1;
    m05 = 0;
    m06 = 0;
    m08 = 60;
    m0A = 500;
    m0C = 1500.0f;
    m10 = 400.0f;
    m14 = 1500.0f;
    m18 = 400.0f;
    m1C = 45.0f;
    m20 = 45.0f;
    m24 = 2.0f;
    m28 = 2.0f;
    m2C = 30.0f;
    m30 = -270.0f;
    m34 = -600.0f;
    m38 = 270.0f;
    m3C = 50;
    m3E = 1;
    m40 = 32;
    m44 = 600.0f;
    m48 = 150;
}

/* 000001A0-000002C8       .text anm_init__FP12fganon_classifUcfi */
void anm_init(fganon_class* i_this, int bckFileIdx, f32 morf, u8 loopMode, f32 speed, int soundFileIdx) {    
    if (soundFileIdx >= 0) {
        void* soundAnm = dComIfG_getObjectRes("Fganon", soundFileIdx);
        J3DAnmTransform* bckAnm = (J3DAnmTransform*)dComIfG_getObjectRes("Fganon", bckFileIdx);
        i_this->mpMorf->setAnm(bckAnm, loopMode, morf, speed, 0.0f, -1.0f, soundAnm);
    }
    else {
        J3DAnmTransform* bckAnm = (J3DAnmTransform*)dComIfG_getObjectRes("Fganon", bckFileIdx);
        i_this->mpMorf->setAnm(bckAnm, loopMode, morf, speed, 0.0f, -1.0f, NULL);
    }
    return;
}

/* 000002C8-00000338       .text tama_draw__FP12fganon_class */
/* Renders PG's Energy Ball model */
void tama_draw(fganon_class* i_this) {
    if (i_this->m671 != 0) {
        J3DModel* pModel = i_this->EnergySphereModel;
        i_this->mpBrkAnm3->entry(pModel->getModelData());
        i_this->mpBtkAnm->entry(pModel->getModelData());
        mDoExt_modelUpdateDL(pModel);
    }
    return;
}

/* 00000338-00000420       .text daFganon_Draw__FP12fganon_class */
/* Renders PG's NPC model */
static BOOL daFganon_Draw(fganon_class* i_this) {
    dSnap_RegistFig(0xc2, i_this, 1.0f, 1.0f, 1.0f);
    J3DModel* pModel = i_this->mpMorf->getModel();
    g_env_light.setLightTevColorType(pModel, &i_this->tevStr);
    i_this->mpBrkAnm1->entry(pModel->getModelData());
    i_this->mpMorf->entryDL();
    if (i_this->m2D0 != 2) {
        pModel = i_this->NpcModel;
        g_env_light.settingTevStruct(TEV_TYPE_ACTOR, &i_this->current.pos, &i_this->mTevStr);
        g_env_light.setLightTevColorType(pModel, &i_this->mTevStr);
        i_this->mpBrkAnm2->entry(pModel->getModelData());
        mDoExt_modelUpdateDL(pModel);
    }
    tama_draw(i_this);
    return TRUE;
}

/* 00000420-00000554       .text deru_brk__FP12fganon_class */
/* Appear Animation 1 */
void deru_brk(fganon_class* i_this) {
    J3DAnmTevRegKey* ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_DERU_MAIN1);
    i_this->mpBrkAnm1->init(i_this->mpMorf->getModel()->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, TRUE, 0);
    ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_DERU_KEN1);
    i_this->mpBrkAnm2->init(i_this->NpcModel->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, TRUE, 0);
    fopAcM_seStart(i_this, JA_SE_CM_PG_APPEAR, 0);
    i_this->mbIsMaterialized = TRUE;
    return;
}

/* 00000554-000006B8       .text kieru_brk__FP12fganon_classUc */
/* Disappear Animation 1 */
void kieru_brk(fganon_class* i_this, unsigned char param_2) {
    J3DAnmTevRegKey* ptrkAnm;
    if ((param_2 == 0) || (param_2 == 1)) {
        ptrkAnm = (J3DAnmTevRegKey *)(J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_KIERU_MAIN1);
        i_this->mpBrkAnm1->init(i_this->mpMorf->getModel()->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, TRUE, 0);
        fopAcM_seStart(i_this, JA_SE_CM_PG_DISAPPEAR, 0);
    }
    if ((param_2 == 0) || (param_2 == 2)) {
        ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Pgsw", PGSW_BRK_KIERU_KEN1);
        i_this->mpBrkAnm2->init(i_this->NpcModel->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, TRUE, 0);
    }
    i_this->mbIsMaterialized = FALSE;
    return;
}

/* 000006B8-000007EC       .text deru_brk2__FP12fganon_class */
/* Appear Animation 2 */
void deru_brk2(fganon_class* i_this) {
    J3DAnmTevRegKey* ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_DERU_MAIN2);
    i_this->mpBrkAnm1->init(i_this->mpMorf->getModel()->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, TRUE, 0);
    ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_DERU_KEN2);
    i_this->mpBrkAnm2->init(i_this->NpcModel->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, TRUE, 0);
    fopAcM_seStart(i_this, JA_SE_CM_PG_APPEAR, 0);
    i_this->mbIsMaterialized = TRUE;
    return;
}

/* 000007EC-00000920       .text kieru_brk2__FP12fganon_class */
/* Dissapear Animation 2 */
void kieru_brk2(fganon_class* i_this) {
    J3DAnmTevRegKey* ptrkAnm;
    ptrkAnm = (J3DAnmTevRegKey *)(J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_KIERU_MAIN2);
    i_this->mpBrkAnm1->init(i_this->mpMorf->getModel()->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, TRUE, 0);
    ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_KIERU_KEN2);
    i_this->mpBrkAnm2->init(i_this->NpcModel->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, TRUE, 0);
    fopAcM_seStart(i_this, JA_SE_CM_PG_DISAPPEAR, 0);
    i_this->mbIsMaterialized = FALSE;
    return;
}

/* 00000920-00000AEC       .text pos_move__FP12fganon_classUc */
void pos_move(fganon_class* i_this, unsigned char param_2) {
    cXyz local_44;
    if (param_2 == 0) {
        local_44 = i_this->m38C - i_this->current.pos;
        s16 yTarget = cM_atan2s(local_44.x,local_44.z);
        f32 fVar2 = std::sqrtf(local_44.x * local_44.x + local_44.z * local_44.z);
        s16 xTarget = -cM_atan2s(local_44.y, fVar2);
        s16 yMaxStep = (s16)(i_this->m39C * i_this->m3A0);
        s16 scale =  5;
        cLib_addCalcAngleS2(&i_this->current.angle.y, yTarget, scale + REG0_S(3), yMaxStep);
        s16 xMaxStep = (s16)(i_this->m39C * i_this->m3A0);
        cLib_addCalcAngleS2(&i_this->current.angle.x, xTarget, scale + REG0_S(3), xMaxStep);
    }
    cLib_addCalc2(&i_this->m3A0, 1.0f, 1.0f, 0.05f);
    local_44.x = 0.0f;
    local_44.y = 0.0f;
    local_44.z = i_this->speedF;
    cMtx_YrotS(*calc_mtx, i_this->current.angle.y);
    cMtx_XrotM(*calc_mtx, i_this->current.angle.x);
    MtxPosition(&local_44, &i_this->speed);
    PSVECAdd(&i_this->current.pos, &i_this->speed, &i_this->current.pos);
    return;
}

/* 00000AEC-00000C14       .text fly_se_set__FP12fganon_class */
void fly_se_set(fganon_class* i_this) {
    float fVar1;
    uint uVar2;
    float fVar4;
    cXyz local_34;
    
    local_34 = i_this->current.pos - i_this->old.pos;
    fVar4 = PSVECSquareMag(&local_34);
    uVar2 = (uint)(std::sqrtf(fVar4) * 3.5f);
    if (uVar2 > 100) {
      uVar2 = 100;
    }
    fopAcM_seStart(i_this, JA_SE_CM_PG_FLYING, uVar2);
    return;
}

/* 00000C14-00001170       .text fly__FP12fganon_class */
void fly(fganon_class* i_this) {   
    fopAc_ac_c* a_this = (fopAc_ac_c*)i_this;
    fopAc_ac_c* player = (fopAc_ac_c*)dComIfGp_getPlayer(0);
    dBgS_LinChk linChk;

    if ((((i_this->m384 & 0xf) == 0) && (cM_rndF(1.0f) < 0.5f)) || (i_this->m388 == -10)) {
        i_this->m398 = player->shape_angle.y;
    }

    switch (i_this->m388) {
    case -10:
        deru_brk(i_this);
        i_this->current.pos = i_this->home.pos;
        i_this->current.pos.y = player->current.pos.y + l_HIO.m10;
        i_this->shape_angle.y = fopAcM_searchPlayerAngleY(a_this);
        i_this->m388 = 1;
        anm_init(i_this, 0x16, 20.0f, 2, 1.0f, -1);
        i_this->m3A4[1] = 60;
        break;
    case 0:
        anm_init(i_this, 0x16, 20.0f, 2, 1.0f, -1);
        i_this->m388++;
        i_this->m3A0 = 0.0f;
        i_this->m3A4[1] = (short)(cM_rndF(50.0f) + 50.0f);
        // Fall-through
    case 1:
        if (i_this->m68A == 1) {
            anm_init(i_this, 0x16, 10.0f, 2, 1.0f, -1);
        }
        mDoMtx_YrotS(*calc_mtx, i_this->m398);
        cXyz posVec;
        posVec.z = l_HIO.m0C;
        posVec.y = l_HIO.m10;
        posVec.x = 0.0f;
        cXyz transformedPos;
        MtxPosition(&posVec, &transformedPos);
        i_this->m38C = player->current.pos + transformedPos;
        posVec = i_this->m38C - i_this->current.pos;
        if (std::sqrtf(PSVECSquareMag(&posVec)) > REG0_F(12) + 300.0f) {
            cLib_addCalc2(&i_this->speedF, REG0_F(15) + 30.0f, 1.0f, REG0_F(13) + 2.0f);
        } else {
            cLib_addCalc0(&i_this->speedF, 1.0f, REG0_F(14) + 1.0f);
        }
        i_this->m39C = REG0_F(5) + 1500.0f;
        cLib_addCalcAngleS2(&i_this->shape_angle.y, fopAcM_searchPlayerAngleY(i_this), 10, 0x400);
        
        cLib_addCalc2(&i_this->m3BC, REG0_F(11) + 50.0f, 1.0f, 2.0f);
        break;
    }

    pos_move(i_this, 0);
    
    fly_se_set(i_this);
    
    if (i_this->m3A4[1] == 0) {
        i_this->m386 = 6;
        i_this->m388 = 0;
    }
    
    if (i_this->m3A4[2] == 0) {
        i_this->m386 = 2;
        i_this->m388 = 0;
    }
}

/* 000015A8-00001BD0       .text shot__FP12fganon_class */
void shot(fganon_class* i_this) {    
    cLib_addCalcAngleS2(&i_this->shape_angle.y, fopAcM_searchPlayerAngleY(i_this), 10, 0x400);
    switch(i_this->m388) {
        case 0: {
            if (!i_this->m408) {
                anm_init(i_this, 0x10, 10.0f, 2, 1.0f, -1);
                i_this->m388++;
                i_this->m3A4[0] = 40;
                fopAcM_monsSeStart(i_this, JA_SE_CV_PG_EBALL_MAKE_S, 0);
                // Fall-through
            } else {
                break;
            }
        }
        case 1: {
            if (i_this->m3A4[0] == 30) {
                i_this->m408 = 1;
            }
            if (i_this->m3A4[0] < 30) {
                fopAcM_seStart(i_this, JA_SE_CM_PG_EBALL_MAKING_S, 0);
            }
            if (i_this->m3A4[0] == 0) {
                anm_init(i_this, 0xd, 3.0f, 0, 1.0f, -1);
                i_this->m388++;
                fopAcM_monsSeStart(i_this, JA_SE_CV_PG_EBALL_FIRE_S, 0);
                mDoAud_seStart(JA_SE_CM_PG_EBALL_FIRE_S, &i_this->eyePos, 0, dComIfGp_getReverb(fopAcM_GetRoomNo(i_this)));
            }
            break;
        }
        case 2: {
            s32 mFrame = i_this->mpMorf->mFrameCtrl.getFrame();
            if (REG0_S(0) + 0xe == mFrame) {
                i_this->m409 = 1;
                i_this->m688 = 0;
                i_this->m687 = 0;
                i_this->m689 = 0;
            }            
            if (i_this->mpMorf->isStop()) {
                anm_init(i_this, 0x16, 3.0f, 2, 1.0f, -1);
                i_this->m388++;
            }
            // Fall-through
        }
        case 3: {
            if (i_this->m408 == 5) {
                cXyz local_34 = i_this->m3E0 - i_this->eyePos;
                if (std::sqrtf(PSVECSquareMag(&local_34)) < REG0_F(1) + (i_this->m404 * (REG0_F(0) + 10.0f) + 400.0f)) {
                    if (i_this->m689 == 0) {
                        if (cM_rndF(1.0f) < 0.5f) {
                            anm_init(i_this, 0x13, 0.0f, 0, 1.0f, -1);
                        }
                        else {
                            anm_init(i_this, 0x14, 0.0f, 0, 1.0f, -1);
                        }
                        i_this->m388++;
                        fopAcM_monsSeStart(i_this, JA_SE_CV_PG_REFLECT_EBALL, 0);
                        mDoAud_seStart(JA_SE_CM_PG_SWING_S, &i_this->eyePos, 0, dComIfGp_getReverb(fopAcM_GetRoomNo(i_this)));
                        i_this->m687++;
                        if ((i_this->m688 >= 7) || ((i_this->m687 >= 4) && (cM_rndF(1.0f) < 0.3f))) {
                            i_this->m689 = 1;
                        }
                    }
                    else if (i_this->m2BC == 2) {
                        i_this->m386 = 2;
                        i_this->m388 = 0;
                        return;
                    }
                }
            }
            break;
        }
        case 4: {
            if (((s32)i_this->mpMorf->getFrame() >= 5) && ((s32)i_this->mpMorf->getFrame() <= 15)) {
                i_this->m686 = 1;
            }
            if (i_this->mpMorf->isStop() || ((i_this->m2BC >= 1) && (i_this->mpMorf->getFrame() >= 20.0f)))
            {
                anm_init(i_this, 0x16, 10.0f, 2, 1.0f, -1);
                i_this->m388 = 3;
            }
            // Fall-through
        }
    }
    cLib_addCalc0(&i_this->speedF, 1.0f, REG0_F(14) + 1.0f);
    pos_move(i_this, 0);
    fly_se_set(i_this);
    if ((i_this->m388 >= 2) && (i_this->m408 == 0)) {
      i_this->m386 = 5;
      i_this->m388 = 0;
    }
    if ((i_this->m388 == 3) || (i_this->m388 == 4)) {
        s32 reverb = dComIfGp_getReverb(fopAcM_GetRoomNo(i_this));
        mDoAud_monsSeStart(JA_SE_OBJ_PG_EBALL_FLY_S, &i_this->m3E0, 100, reverb);
    }
    return;
}

/* 00001BD0-000020B8       .text spinattack__FP12fganon_class */
void spinattack(fganon_class* i_this) {
    fopAc_ac_c* a_this = (fopAc_ac_c*)i_this;
    fopAc_ac_c* player = (fopAc_ac_c*)dComIfGp_getPlayer(0);
    dBgS_LinChk linChk;
    int mFrame = i_this->mpMorf->mFrameCtrl.getFrame();
    switch(i_this->m388) {
        case 0: {
            i_this->shape_angle.y = player->shape_angle.y;
            i_this->m388 = 1;
            // Fall-through
        }
        case 1: {
            mDoMtx_YrotS(*calc_mtx, i_this->shape_angle.y);
            cXyz posVec(0.0f, l_HIO.m2C + 100.0f, l_HIO.m30);
            cXyz transformedPos;
            MtxPosition(&posVec, &transformedPos);
            i_this->current.pos = player->current.pos + transformedPos;
            linChk.Set(&player->eyePos, &i_this->current.pos, a_this);
            if (!dComIfG_Bgsp()->LineCross(&linChk)) {
                i_this->current.pos.y -= 100.0f;
                anm_init(i_this, 0x16, 1.0f, 2, 1.0f, -1);
                i_this->m388 = 2;
                i_this->m3A4[0] = 30;
                deru_brk(i_this);
                // Fall-through
            }
            else {
                i_this->shape_angle.y = cM_rndFX(32768.0f);
                break;
            }
        case 2:
            if (i_this->m3A4[0] == 0) {
                anm_init(i_this, 0x9, 2.0f, 0, 1.0f, -1);
                i_this->m388 = 3;
                i_this->speedF = 0.0f;
                fopAcM_monsSeStart(i_this, JA_SE_CV_PG_EBALL_FIRE_S, 0);
            }
            break;
        }
        case 3: {
            if (mFrame == 0xe) {
                fopAcM_seStart(i_this, JA_SE_CM_PG_SWING_L, 0);
            }
            i_this->m685 = 1;
            i_this->mWeponSph.SetAtAtp(8);
            if (mFrame == l_HIO.m3E) {
              i_this->m6AC = l_HIO.m40 - l_HIO.m3E;
            }
            float fVar9;
            float fVar10;
            if ((mFrame >= 0xd) && (mFrame <= 0x18)) {
                fVar9 = 20.0f;
                fVar10 = 4.0f;
            }
            else {
                fVar9 = 0.0f;
                fVar10 = 4.0f;
            }
            cLib_addCalc2(&i_this->speedF, fVar9, 1.0f, fVar10);
            i_this->current.angle.y = i_this->shape_angle.y;
            i_this->current.angle.x = 0;
            pos_move(i_this, 1);
            if (i_this->mpMorf->isStop()) {
                i_this->m386 = 2;
                i_this->m388 = 0;
            }
            break;
        }
    }
    return;
}

/* 000020B8-00002614       .text fly2__FP12fganon_class */
void fly2(fganon_class* i_this) {
    fopAc_ac_c* a_this = (fopAc_ac_c*)i_this;
    fopAc_ac_c* player = (fopAc_ac_c*)dComIfGp_getPlayer(0);
    dBgS_LinChk linChk;

    if ((((i_this->m384 & 0xf) == 0) && (cM_rndF(1.0f) < 0.5f)) || (i_this->m388 == -10)) {
        i_this->m398 = player->shape_angle.y;
    }
    switch (i_this->m388) {
    case -10:
        deru_brk(i_this);
        i_this->current.pos = i_this->home.pos;
        i_this->current.pos.y = player->current.pos.y + l_HIO.m18;
        i_this->shape_angle.y = fopAcM_searchPlayerAngleY(a_this);
        i_this->m388 = 1;
        anm_init(i_this, 0x16, 20.0f, 2, 1.0f, -1);
        i_this->m3A4[1] = 40;
        break;
    case 0:
        anm_init(i_this, 0x16, 20.0f, 2, 1.0f, -1);
        i_this->m388++;
        i_this->m3A0 = 0.0f;
        i_this->m3A4[1] = (short)(cM_rndF(50.0f) + 50.0f);
        // Fall-through
    case 1:
        if (i_this->m68A == 1) {
            anm_init(i_this, 0x16, 10.0f, 2, 1.0f, -1);
        }
        mDoMtx_YrotS(*calc_mtx, i_this->m398);
        cXyz posVec;
        posVec.z = l_HIO.m14;
        posVec.y = l_HIO.m18;
        posVec.x = 0.0f;
        cXyz transformedPos;
        MtxPosition(&posVec, &transformedPos);
        i_this->m38C = player->current.pos + transformedPos;
        posVec = i_this->m38C - i_this->current.pos;
        if (std::sqrtf(PSVECSquareMag(&posVec)) > REG0_F(12) + 300.0f) {
            cLib_addCalc2(&i_this->speedF, REG0_F(15) + 30.0f, 1.0f, REG0_F(13) + 2.0f);
        } else {
            cLib_addCalc0(&i_this->speedF, 1.0f, REG0_F(14) + 1.0f);
        }
        i_this->m39C = REG0_F(5) + 1500.0f;
        cLib_addCalcAngleS2(&i_this->shape_angle.y, fopAcM_searchPlayerAngleY(i_this), 10, 0x400);
        
        cLib_addCalc2(&i_this->m3BC, REG0_F(11) + 50.0f, 1.0f, 2.0f);
        break;
    }

    pos_move(i_this, 0);
    
    fly_se_set(i_this);
    
    if (i_this->m3A4[1] == 0) {
        i_this->m386 = 11;
        i_this->m388 = 0;
    }
    
    if (i_this->m3A4[2] == 0) {
        i_this->m386 = 2;
        i_this->m388 = 0;
    }
}

/* 00002614-000029C8       .text tama_set__FP12fganon_class */
void tama_set(fganon_class* i_this) {
    if (i_this->m671 != 0) {
        mDoMtx_YrotS(*calc_mtx, i_this->shape_angle.y);
        cXyz posVec;
        posVec.x = 0.0f;
        posVec.y = -i_this->m680;
        posVec.z = i_this->m680;
        cXyz transformedPos;
        MtxPosition(&posVec, &transformedPos);
        cXyz tempPos(i_this->current.pos.x + transformedPos.x, transformedPos.y + (400.0f + i_this->current.pos.y + REG8_F(4)), i_this->current.pos.z + transformedPos.z);
        i_this->m664 = tempPos;
        switch (i_this->m671) {
            case 1: {
                for (int i = 0; i < 2; i++) {
                    if (i_this->mEmitters3[i] != NULL) {
                        i_this->mEmitters3[i]->becomeInvalidEmitter();
                        i_this->mEmitters3[i] = NULL;
                    }
                }
                i_this->mEmitters3[0] = dComIfGp_particle_set(0x821A, &tempPos, NULL);
                i_this->mEmitters3[1] = dComIfGp_particle_set(0x821B, &tempPos, NULL);
                i_this->m672 = 250;
                i_this->m671 = 2;
                i_this->mpBrkAnm3->setPlaySpeed(1.0f);
            }
            case 2: {
                break;
            }
            case 3: {
                i_this->mpBrkAnm3->setPlaySpeed(-1.0f);
                i_this->m671 = 4;
                dComIfGp_particle_set(0x8242, &tempPos, &i_this->shape_angle);
                dComIfGp_particle_set(0x8243, &tempPos, &i_this->shape_angle);
                break;
            }
            case 4: {
                i_this->m672 -= 50;
                for (int i = 0; i < 2; i++) {
                    if (i_this->mEmitters3[i] != NULL) {
                        i_this->mEmitters3[i]->setGlobalAlpha(i_this->m672);
                    }
                }
                if (i_this->m672 == 0) {
                    i_this->m671 = 5;
                }
                break;
            }
            case 5:
            case 6:
            case 7:
            case 8: {
                i_this->m671++;
                break;
            }
            case 9: {
                i_this->m671 = 0;
                break;
            }
        }
        for (int i = 0; i < 2; i++) {
            if (i_this->mEmitters3[i] != NULL) {
                if (i_this->m672 != 0) {
                    i_this->mEmitters3[i]->setGlobalTranslation(tempPos.x, tempPos.y, tempPos.z);
                } else {
                    i_this->mEmitters3[i]->becomeInvalidEmitter();
                    i_this->mEmitters3[i] = NULL;
                }
            }
        }
        mDoMtx_stack_c::transS(tempPos.x, tempPos.y, tempPos.z);
        i_this->EnergySphereModel->setBaseTRMtx(mDoMtx_stack_c::get());
        i_this->mpBrkAnm3->play();
        i_this->mpBtkAnm->play();
    }
    return;
}

/* 000029C8-00002A38       .text mahou_set__FP12fganon_class */
void mahou_set(fganon_class* i_this) {
    for (int i = 0; i < 8; i++) {
        fopAcM_create(0xF4, i, &i_this->m664, i_this->current.roomNo);
    }
    i_this->m670 = 0;
    return;
}

/* 00002A38-000030C4       .text shot2__FP12fganon_class */
void shot2(fganon_class*) {
    /* Nonmatching */
}

/* 000030C4-00003690       .text spinattack2__FP12fganon_class */
void spinattack2(fganon_class*) {
    /* Nonmatching */
}

/* 00003690-00003B3C       .text down__FP12fganon_class */
void down(fganon_class*) {
    /* Nonmatching */
}

/* 00003F7C-00004300       .text kabe_check__FP12fganon_class */
void kabe_check(fganon_class*) {
    /* Nonmatching */
}

/* 00004300-000044CC       .text deru__FP12fganon_class */
void deru(fganon_class*) {
    /* Nonmatching */
}

/* 000044CC-00004584       .text kieru__FP12fganon_class */
void kieru(fganon_class*) {
    /* Nonmatching */
}

/* 00004584-00004BC8       .text fail__FP12fganon_class */
void fail(fganon_class*) {
    /* Nonmatching */
}

/* 00004BC8-00004DB4       .text standby__FP12fganon_class */
void standby(fganon_class*) {
    /* Nonmatching */
}

/* 00004DB4-00005128       .text start__FP12fganon_class */
void start(fganon_class*) {
    /* Nonmatching */
}

/* 00005128-00005350       .text end__FP12fganon_class */
void end(fganon_class*) {
    /* Nonmatching */
}

/* 00005350-000056A4       .text last_end__FP12fganon_class */
void last_end(fganon_class*) {
    /* Nonmatching */
}

/* 000056A4-00006288       .text damage_check__FP12fganon_class */
void damage_check(fganon_class*) {
    /* Nonmatching */
}

/* 00006288-00006560       .text move__FP12fganon_class */
s32 move(fganon_class* i_this) {    
    int res = 0;
    if (!dComIfGp_checkPlayerStatus0(0, 0x10000) && !dComIfGp_checkPlayerStatus0(0, 0x100000) && i_this->m386) {
        if (i_this->m386 == 10) {
            dCam_getBody()->SetTypeForce("P_Ganon3", NULL);
        }
        else if (i_this->m2BC != 1) {
            dCam_getBody()->SetTypeForce("P_Ganon1", NULL);
        }
        else {
            dCam_getBody()->SetTypeForce("P_Ganon2", NULL);
        }
    }
    if ((i_this->m2BC == 0) && (i_this->m386 < 0x14)) {
        fopAc_ac_c* player = (fopAc_ac_c*)dComIfGp_getPlayer(0);
        if ((i_this->m386 == 0) && (player->current.pos.y < 710.0f)) {
            return 0;
        }
        if ((i_this->m386 != 2) && (player->current.pos.y < 710.0f)) {
            i_this->m386 = 2;
            i_this->m388 = 0;
        }
    }
    switch(i_this->m386) {
    case 0:
        standby(i_this);
        break;
    case 1:
        deru(i_this);
        break;
    case 2:
        kieru(i_this);
        break;
    case 3:
        fail(i_this);
        res = 1;
        break;
    case 5:
        fly(i_this);
        res = 1;
        break;
    case 6:
        shot(i_this);
        res = 1;
        break;
    case 7:
        spinattack(i_this);
        res = 1;
        break;
    case 8:
        fly2(i_this);
        res = 1;
        break;
    case 9:
        shot2(i_this);
        res = 1;
        break;
    case 10:
        spinattack2(i_this);
        break;
    case 0xb:
        down(i_this);
        res = 1;
        break;
    case 0x14:
        start(i_this);
        break;
    case 0x15:
        end(i_this);
        break;
    case 0x16:
        last_end(i_this);
    }
    damage_check(i_this);
    i_this->m68C = 0;
    cXyz* ccMove = i_this->mStts.GetCCMoveP();
    if (ccMove != NULL) {
        i_this->current.pos.x += ccMove->x;
        i_this->current.pos.y += ccMove->y;
        i_this->current.pos.z += ccMove->z;
    }
    if (i_this->m3B0 > 0.01f) {
        cXyz posVec(0.0f, 0.0f, i_this->m3B0);
        cMtx_YrotS(*calc_mtx, i_this->m3B4);
        cMtx_XrotM(*calc_mtx, i_this->m3B6);
        cXyz transformedPos;
        MtxPosition(&posVec, &transformedPos);
        PSVECAdd(&i_this->current.pos, &transformedPos, &i_this->current.pos);
        cLib_addCalc0(&i_this->m3B0, 1.0f, 7.0f);
    }
    return res;
}

/* 00006560-00007434       .text demo_camera__FP12fganon_class */
void demo_camera(fganon_class*) {
    /* Nonmatching */
}

/* 00007434-0000778C       .text ball_bg_check__FP12fganon_class */
void ball_bg_check(fganon_class*) {
    /* Nonmatching */
}

/* 0000778C-00008614       .text energy_ball_move__FP12fganon_class */
void energy_ball_move(fganon_class*) {
    /* Nonmatching */
}

/* 00008614-000086B4       .text mahou_se_set__FPvPv */
/* Play PG's magic sound effect */
void* mahou_se_set(void* i_act, void* i_other) {  
    fganon_class* i_this = (fganon_class*)i_act;
    if ((fopAc_IsActor(i_this)) && (((base_process_class*)i_this)->mProcName == 0xf4)) {
        if (i_this->health == 0) {
            fopAcM_seStartCurrent(i_this, JA_SE_OBJ_PG_EBALL_FLY_L, 0);
        }
        return i_act;
    }
    return NULL;
}

/* 000086B4-0000924C       .text daFganon_Execute__FP12fganon_class */
static BOOL daFganon_Execute(fganon_class* i_this) {
    cXyz local_70;
    cXyz local_7c;
    cXyz local_94;
    cXyz local_84;

    local_70.x = 0.0f;
    local_70.y = 0.0f;
    local_70.z = 0.0f;

    if (i_this->mB89 >= 2) {
        i_this->mB89--;
        if (i_this->mB89 == 1) {
            mDoAud_subBgmStart(JA_BGM_P_GANON_2);
        }
    }

    fpcM_Search(&mahou_se_set, i_this);
    g_env_light.settingTevStruct(TEV_TYPE_ACTOR, &i_this->current.pos, &i_this->tevStr);

    if (((((i_this->m386 == 5) || (i_this->m386 == 9)) || (i_this->m386 == 7)) || (i_this->m386 == 10)) && ((i_this->m68B != 0 && (i_this->m68A == 0)))) {
        i_this->m68B = 0;
        anm_init(i_this, 0x17, 6.0f, 2, 1.0f, -1);
        i_this->m68A = 60;
        fopAcM_monsSeStart(i_this, JA_SE_CV_PG_LAUGH_3, 0);
    }

    i_this->m384++;
    for (int i = 0; i < 5; i++){
        if (i_this->m3A4[i] != 0)
            i_this->m3A4[i] -= 1;
    }

    if (i_this->m68A != 0)
        i_this->m68A--;
    if (i_this->m3AE != 0)
        i_this->m3AE--;
    if (i_this->m3B8 != 0)
        i_this->m3B8--;

    if (l_HIO.m05 == 0) {
        if (i_this->mbIsMaterialized != 0) {
            i_this->attention_info.flags = 4;
        }
        else {
            fopAcM_OffStatus(i_this, 0);
            i_this->attention_info.flags = 0;
        }
        if (move(i_this) != 0) {
            i_this->mAcch.CrrPos(*dComIfG_Bgsp());
        }
        i_this->mpMorf->play(&i_this->eyePos, 0, 0);
        i_this->mpBrkAnm1->play();
        i_this->mpBrkAnm2->play();
    }
    
    local_94.x = i_this->m3BC * cM_ssin(i_this->m384 * (REG0_S(6) + 700));
    local_94.y = i_this->m3BC * cM_ssin(i_this->m384 * (REG0_S(6) + 0x2ee));
    local_94.z = i_this->m3BC * cM_scos(i_this->m384 * (REG0_S(6) + 0x2d0));
    
    cLib_addCalc0(&i_this->m3BC, 1.0f, 1.0f);

    J3DModel* mpModel = i_this->mpMorf->getModel();
    
    mpModel->setBaseScale(i_this->scale);
    
    mDoMtx_stack_c::transS(i_this->current.pos.x + local_94.x, i_this->current.pos.y + local_94.y, i_this->current.pos.z + local_94.z);
    
    float scale = i_this->m3B8 * (REG0_F(14) + 500.0f);
    float sin = cM_ssin(i_this->m384 * 0x2100);
    float cos = cM_scos(i_this->m384 * 0x2300);
    
    mDoMtx_stack_c::YrotM(i_this->shape_angle.y + (short)(scale * sin));
    mDoMtx_stack_c::XrotM(i_this->shape_angle.x + (short)(scale * cos));
    mDoMtx_stack_c::ZrotM(i_this->shape_angle.z);

    mpModel->setBaseTRMtx(mDoMtx_stack_c::get());
    i_this->mpMorf->calc();

    cMtx_copy(mpModel->getAnmMtx(27), *calc_mtx);
    
    MtxPosition(&local_70, &i_this->eyePos);
    
    i_this->attention_info.position = i_this->eyePos;
    i_this->attention_info.position.y += 30.0f;
    
    if (i_this->m2D0 == 0) {
        cMtx_copy(i_this->mpMorf->getModel()->getAnmMtx(24), *calc_mtx);
        
        cMtx_YrotM(*calc_mtx, REG8_S(1) - 400);
        cMtx_XrotM(*calc_mtx, REG8_S(2) - 400);
        cMtx_ZrotM(*calc_mtx, (REG8_S(3) + 1) + 0x7FFF);
        
        MtxTrans(REG8_F(9), REG8_F(10), REG8_F(11) + 85.0f, TRUE);
        MtxTrans(REG0_F(12), REG0_F(13), REG0_F(14) + 90.0f, TRUE);
        
        cMtx_ZrotM(*calc_mtx, i_this->m6A0);
        cMtx_XrotM(*calc_mtx, i_this->m694);
        cMtx_ZrotM(*calc_mtx, -i_this->m6A0);

        int iVar4 = 0;
        if (i_this->m6A6 != 0) {
            sin = cM_ssin(i_this->m6A6 * (REG0_S(2) + 0x1800));
            iVar4 = (REG0_F(14) + 400.0f) * (i_this->m6A6 * sin);
            i_this->m6A6--;
        }
        cMtx_ZrotM(*calc_mtx, i_this->m6A2 + iVar4);
        MtxTrans(-REG0_F(12), -REG0_F(13), -(REG0_F(14) + 90.0f), TRUE);
        i_this->NpcModel->setBaseTRMtx(*calc_mtx);
    }

    demo_camera(i_this);
    energy_ball_move(i_this);
    
    for (int i = 0; i < 2; i++) {
        if ((i_this->mbIsMaterialized != 0) && (i_this->m386 != 0x16)) {
            if (i_this->mEmitters1[i] != NULL) {
                i_this->mEmitters1[i]->setGlobalRTMatrix(i_this->mpMorf->getModel()->getAnmMtx(jno[i]));
            }
            else {
                i_this->mEmitters1[i] = dComIfGp_particle_set(eno[i], &i_this->current.pos, NULL);
            }
        }
        else {
            if (i_this->mEmitters1[i] != NULL) {
                i_this->mEmitters1[i]->becomeInvalidEmitter();
                i_this->mEmitters1[i] = NULL;
            }
        }
    }
    if (i_this->mbIsMaterialized != 0) {
        mDoMtx_copy(i_this->mpMorf->getModel()->getAnmMtx(10), *calc_mtx);
        local_70.x = 0.0f;
        local_70.y = 0.0f;
        local_70.z = 0.0f;
        MtxPosition(&local_70, &local_7c);
        local_7c.y -= REG0_F(0) + 150.0f;
        if (i_this->m68F == 0) {
            i_this->mCyl.OnCoSetBit();
        }
        else {
            i_this->mCyl.OffCoSetBit();
        }
    }
    else {
        i_this->mCyl.OffCoSetBit();
        float z = i_this->m68F * -1000.0f;
        local_7c.x = 20000.0f;
        local_7c.y = 20000.0f;
        local_7c.z = z;
    }

    i_this->mCyl.SetC(local_7c);
    i_this->mCyl.SetH(REG8_F(3) + 250.0f);
    i_this->mCyl.SetR(REG8_F(4) + 70.0f);

    dComIfG_Ccsp()->Set(&i_this->mCyl);
    
    local_84.x = -10000.0f;
    local_84.y = -10000.0f;
    local_84.z = -10000.0f;

    if (i_this->m685 != 0) {
        i_this->mWeponSph.SetR(REG0_F(13) + 60.0f);
        mDoMtx_copy(i_this->mpMorf->getModel()->getAnmMtx(24), *calc_mtx);
        local_70.x = 0.0f;
        local_70.y = 0.0f;
        local_70.z = 100.0f;
        MtxPosition(&local_70, &local_84);
        i_this->m685 = 0;
        if (i_this->m684 == 0) {
            i_this->mWeponSph.StartCAt(local_84);
            i_this->m684 = 1;
        }
        else {
            i_this->mWeponSph.MoveCAt(local_84);
        }
    } else {
        i_this->m684 = 0;
        i_this->mWeponSph.SetC(local_84);
    }
    g_dComIfG_gameInfo.play.mCcS.Set(&i_this->mWeponSph);
    i_this->m686 = 0;
    mant_class* cape = (mant_class*)fopAcM_SearchByID(i_this->mCapeID);
    if (cape != NULL) {
        mDoMtx_copy(i_this->mpMorf->mpModel->mpNodeMtx[REG0_S(5) + 0x14], *calc_mtx);
        local_70.x = REG0_F(0) + 35.0f;
        local_70.y = REG0_F(1);
        local_70.z = REG0_F(2) + -30.0f;
        MtxPosition(&local_70, &cape->m1BE0);
        mDoMtx_copy(i_this->mpMorf->mpModel->mpNodeMtx[REG0_S(6) + 0xB], *calc_mtx);
        local_70.x = REG0_F(3) + 35.0f;
        local_70.y = REG0_F(4);
        local_70.z = REG0_F(5) + 30.0f;
        MtxPosition(&local_70, &cape->m1BEC);
        cape->current.pos = i_this->eyePos;
        cape->current.angle = i_this->current.angle;
        float fVar1;
        if ((i_this->mbIsMaterialized != 0) && (i_this->m68E == 0)) {
            fVar1 = 1.0f;
        }
        else {
            fVar1 = 0.0f;
        }
        cLib_addCalc2(&cape->scale.y, fVar1 , 1.0f, REG0_F(8) + 0.1f);
    }
    if (i_this->m6AC != 0) {
        i_this->m6AC--;
        i_this->setBtAttackData(0.0f, 10.0f, 10000.0f, 1);
        i_this->setBtMaxDis(l_HIO.m44);
        i_this->setBtNowFrame(5.0f);
    }
    else {
        i_this->setBtNowFrame(100.0f);
    }
    return TRUE;
}

/* 0000924C-00009254       .text daFganon_IsDelete__FP12fganon_class */
static BOOL daFganon_IsDelete(fganon_class*) {
    return TRUE;
}

/* 00009254-000093B4       .text daFganon_Delete__FP12fganon_class */
static BOOL daFganon_Delete(fganon_class* i_this) {    
    if ((i_this->mB8A) && (dComIfG_resDelete(&i_this->mPhs2, "Pgsw"), i_this->mB8A != 1))
        dComIfG_resDelete(&i_this->mPhs1, "Fganon");
    
    if (i_this->mB88 != 0) {
        hio_set = 0;
        mDoHIO_deleteChild(l_HIO.mNo);
    }

    mDoAud_seDeleteObject(&i_this->m3E0);

    if (i_this->mCapeID != 0xffff)
        fopAcM_delete(fopAcM_SearchByID(i_this->mCapeID));

    if (i_this->mB89)
        mDoAud_subBgmStop();

    for (int i = 0; i < 4; i++) {
        if (i_this->mEmitters2[i])
            i_this->mEmitters2[i]->becomeInvalidEmitter();
    }
    
    for (int i = 0; i < 2; i++) {
        if (i_this->mEmitters1[i])
            i_this->mEmitters1[i]->becomeInvalidEmitter();
    }
    return TRUE;
}

/* 000093B4-000097FC       .text useHeapInit__FP10fopAc_ac_c */
static BOOL useHeapInit(fopAc_ac_c* i_act) {
    J3DModelData* pModelData;
    J3DAnmTevRegKey* ptrkAnm;
    J3DAnmTextureSRTKey* ptsrtkAnm;
    int iVar4;
    
    fganon_class* i_this = (fganon_class*)i_act;
    
    mDoExt_McaMorf* morf = new mDoExt_McaMorf((J3DModelData *)dComIfG_getObjectRes("Fganon", FGANON_BDL_BPG), NULL, NULL, 
                                              (J3DAnmTransformKey *)dComIfG_getObjectRes("Fganon", FGANON_BCK_WAIT1), 
                                              J3DFrameCtrl::LOOP_REPEAT_e, 1.0f, 0, -1, 1, NULL, 0, 0x11020203);
    
    i_this->mpMorf = morf;
    if ((i_this->mpMorf == NULL || i_this->mpMorf->getModel() == NULL))
        return FALSE;
    
    i_this->mpBrkAnm1 = new mDoExt_brkAnm();
    if (i_this->mpBrkAnm1 == NULL)
        return FALSE;

    ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_DERU_MAIN1);
    iVar4 = i_this->mpBrkAnm1->init(i_this->mpMorf->mpModel->getModelData(), ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, FALSE, 0);
    if (iVar4 == 0)
        return FALSE;

    pModelData = (J3DModelData *)dComIfG_getObjectRes("Pgsw", PGSW_BDL_BPG_KEN1);
    i_this->NpcModel = mDoExt_J3DModel__create(pModelData, 0, 0x11020203);;
    if (i_this->NpcModel == NULL)
        return FALSE;

    pModelData = i_this->NpcModel->getModelData();
    i_this->mpBrkAnm2 = new mDoExt_brkAnm();
    if (i_this->mpBrkAnm2 == NULL)  
        return FALSE;

    ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_DERU_KEN1);
    iVar4 = i_this->mpBrkAnm2->init(pModelData, ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, FALSE, 0);
    if (iVar4 == 0)
        return FALSE;
    
    pModelData = (J3DModelData *)dComIfG_getObjectRes("Fganon", FGANON_BDL_YDKBL00);
    i_this->EnergySphereModel = mDoExt_J3DModel__create(pModelData, 0, 0x11020203);
    if (i_this->EnergySphereModel == NULL)
        return FALSE;
    
    i_this->mpBtkAnm = new mDoExt_btkAnm();
    if (i_this->mpBtkAnm == NULL)
        return FALSE;

    ptsrtkAnm = (J3DAnmTextureSRTKey *)dComIfG_getObjectRes("Fganon", FGANON_BTK_YDKBL00);
    iVar4 = i_this->mpBtkAnm->init(pModelData, ptsrtkAnm, TRUE, J3DFrameCtrl::LOOP_REPEAT_e, 1.0f, 0, -1, FALSE, 0);
    if (iVar4 == 0)
        return FALSE;

    i_this->mpBrkAnm3 = new mDoExt_brkAnm();
    if (i_this->mpBrkAnm3 == NULL)
        return FALSE;

    ptrkAnm = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Fganon", FGANON_BRK_YDKBL00);
    iVar4 = i_this->mpBrkAnm3->init(pModelData, ptrkAnm, TRUE, J3DFrameCtrl::LOOP_ONCE_e, 1.0f, 0, -1, FALSE, 0);
    if (iVar4 == 0)
        return FALSE;

    return TRUE;
}

/* 00009844-00009C70       .text daFganon_Create__FP10fopAc_ac_c */
static s32 daFganon_Create(fopAc_ac_c* i_act) {
    fganon_class* i_this = (fganon_class*)i_act;
    fopAcM_SetupActor(i_act, fganon_class);
    s32 res;
    s32 res2;
    
    if (fpcM_IsFirstCreating(i_this)) {
        i_this->mSwitchNo = fopAcM_GetParam(i_this) >> 0x10;
    }
    
    if ((i_this->mSwitchNo != 0xFF) && (dComIfGs_isSwitch(i_this->mSwitchNo, dComIfGp_roomControl_getStayNo()) != 0)) {
        if (((fopAcM_GetParam(i_this) & 0xF) == 2) && !(dComIfGs_isEventBit(0x3A08))) {
            fopAcM_create(PROC_BOKO, 5, &i_this->current.pos, i_this->current.roomNo);
        }
        return cPhs_ERROR_e;
    }

    i_this->mB8A = 1;
    res = dComIfG_resLoad(&i_this->mPhs2, "Pgsw");
    if (res != cPhs_COMPLEATE_e) {
        return res;
    }

    i_this->mB8A = 2;
    res2 = dComIfG_resLoad(&i_this->mPhs1, "Fganon");
    if (res2 == cPhs_COMPLEATE_e) {
        i_this->m2BC  = fopAcM_GetParam(i_this) & 0xF;
        i_this->m2BD  = fopAcM_GetParam(i_this) >> 8;
        i_this->mSwitchNo = fopAcM_GetParam(i_this) >> 0x10;
        i_this->m2BF  = fopAcM_GetParam(i_this) >> 0x18;
        if (i_this->m2BC == 3) {
            i_this->m68F = (fopAcM_GetParam(i_this) >> 4) & 0xF;
        }
        if (!fopAcM_entrySolidHeap(i_this, useHeapInit, 0x96000)) {
            return cPhs_ERROR_e;
        }

        i_this->attention_info.flags = 4;
        i_this->attention_info.distances[2] = 4;

        if (hio_set == 0) {
            i_this->mB88 = 1;
            hio_set = 1;
            if (i_this->m2BC == 2) {
                l_HIO.mNo = mDoHIO_createChild("ファントムガノン③", (JORReflexible *)&l_HIO);
            }
            else if (i_this->m2BC == 1) {
                l_HIO.mNo = mDoHIO_createChild("ファントムガノン②", (JORReflexible *)&l_HIO);
            }
            else {
                l_HIO.mNo = mDoHIO_createChild("ファントムガノン①", (JORReflexible *)&l_HIO);
            }
        }

        i_this->mAcch.Set(fopAcM_GetPosition_p(i_this), fopAcM_GetOldPosition_p(i_this), i_this, 1, &i_this->mAcchCir, fopAcM_GetSpeed_p(i_this));
        i_this->mAcch.OffSameActorChk();
        i_this->mAcchCir.SetWall(200.0f, 200.0f);
        
        i_this->mStts.Init(0xFA, 0xFF, i_act);
        
        i_this->mCyl.Set(cc_cyl_src);
        i_this->mCyl.SetStts(&i_this->mStts);
        i_this->mCyl.OnTgNoHitMark();
        
        i_this->mBallTgSph.Set(ball_tg_sph_src); 
        i_this->mBallTgSph.SetStts(&i_this->mStts);
        i_this->mBallTgSph.OnTgNoHitMark();
        
        i_this->mBallAtSph.Set(ball_at_sph_src);
        i_this->mBallAtSph.SetStts(&i_this->mStts);
        
        i_this->mWeponSph.Set(wepon_sph_src);
        i_this->mWeponSph.SetStts(&i_this->mStts);

        if (i_this->m68F == 0) {
            master = i_this;
            if (i_this->m2BC == 0) {
                i_this->m386 = 20;
                i_this->m388 = 0;
                kieru_brk(i_this, 0);
                i_this->max_health = 30;
                i_this->health = 30;
                i_this->m690 = 10;
            }
            else {
                i_this->max_health = 100;
                i_this->health = 100;
                i_this->m386 = 0;
                i_this->m388= -1;
            }
            i_this->current.pos.y += 10000.0f;
        }
        else {
            i_this->m386 = 10;
            i_this->m388 = 0;
            deru_brk(i_this);
        }
        i_this->initBt(REG8_F(8) + 300.0f, 300.0f);
        i_this->mCapeID = fopAcM_create(PROC_MANT, 1, &i_this->current.pos, i_this->current.roomNo);
        daFganon_Execute(i_this);
    }
    return res2;
    
}

static actor_method_class l_daFganon_Method = {
    (process_method_func)daFganon_Create,
    (process_method_func)daFganon_Delete,
    (process_method_func)daFganon_Execute,
    (process_method_func)daFganon_IsDelete,
    (process_method_func)daFganon_Draw,
};

actor_process_profile_definition g_profile_FGANON = {
    /* LayerID      */ fpcLy_CURRENT_e,
    /* ListID       */ 0x0007,
    /* ListPrio     */ fpcPi_CURRENT_e,
    /* ProcName     */ PROC_FGANON,
    /* Proc SubMtd  */ &g_fpcLf_Method.base,
    /* Size         */ sizeof(fganon_class),
    /* SizeOther    */ 0,
    /* Parameters   */ 0,
    /* Leaf SubMtd  */ &g_fopAc_Method.base,
    /* Priority     */ 0x00E6,
    /* Actor SubMtd */ &l_daFganon_Method,
    /* Status       */ fopAcStts_UNK40000_e,
    /* Group        */ fopAc_ENEMY_e,
    /* CullType     */ fopAc_CULLBOX_0_e,
};
