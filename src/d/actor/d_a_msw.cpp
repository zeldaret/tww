//
// Generated by dtk
// Translation Unit: d_a_msw.cpp
//

#include "d/actor/d_a_msw.h"
#include "d/d_bg_w.h"
#include "d/d_procname.h"
#include "m_Do/m_Do_ext.h"
#include "d/d_com_inf_game.h"
#include "d/d_s_play.h"

/* 00000078-000002D4       .text ride_call_back__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c */
void ride_call_back(dBgW*, fopAc_ac_c*, fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000310-00000540       .text chain_Draw__FP9msw_class */
void chain_Draw(msw_class* i_this) {

    for (int i = 0; i < 4; i++) {
        cXyz tmp = i_this->m310[i] - i_this->m2E0[i];
        s16 angle1 = -cM_atan2s(tmp.y, tmp.z);

        // TODO: std::sqrtf(float)
        s32 angle2 = cM_atan2s(tmp.x, sqrtf(tmp.y * tmp.y + tmp.z * tmp.z));

        MtxTrans(i_this->m2E0[i].x, i_this->m2E0[i].y, i_this->m2E0[i].z, false);

        s16 var_r4;
        s32 var_r20;

        if (i_this->m83C[i] != 0) {
            var_r20 = i_this->m83C[i] * cM_ssin(i_this->m298 * 18000) * (g_regHIO.mChild[6].mFloatRegs[6] + 100.0f);
            var_r4 = i_this->m298 * 3000;
        } else {
            var_r4 = 0;
            var_r20 = 0;
        }

        cMtx_YrotM(*calc_mtx, var_r4);
        cMtx_XrotM(*calc_mtx, angle1 + var_r20);
        cMtx_YrotM(*calc_mtx, angle2);

        i_this->mpChainModels[i]->setBaseTRMtx(*calc_mtx);
        g_env_light.setLightTevColorType(i_this->mpChainModels[i], &i_this->tevStr);
        mDoExt_modelUpdateDL(i_this->mpChainModels[i]);
    }
}

/* 00000540-000005E8       .text daMsw_Draw__FP9msw_class */
static BOOL daMsw_Draw(msw_class* i_this) {
    g_env_light.settingTevStruct(TEV_TYPE_BG0, &i_this->current.pos, &i_this->tevStr);
    g_env_light.setLightTevColorType(i_this->mpModel, &i_this->tevStr);

    mDoExt_modelUpdateDL(i_this->mpModel);

    dComIfGd_setListBG();
    chain_Draw(i_this);
    dComIfGd_setList();

    return TRUE;
}

/* 000005E8-0000080C       .text msw_move__FP9msw_class */
void msw_move(msw_class*) {
    /* Nonmatching */
}

/* 0000080C-00000AD4       .text daMsw_Execute__FP9msw_class */
static BOOL daMsw_Execute(msw_class*) {
    /* Nonmatching */
}

/* 00000AD4-00000B38       .text daMsw_IsDelete__FP9msw_class */
static BOOL daMsw_IsDelete(msw_class* i_this) {
    for (int i = 0; i < 4; i++) {
        mDoAud_seDeleteObject(&i_this->m2E0[i]);
    }

    return TRUE;
}

/* 00000B38-00000B88       .text daMsw_Delete__FP9msw_class */
static BOOL daMsw_Delete(msw_class*) {
    /* Nonmatching */
}

/* 00000B88-00000D3C       .text daMsw_CreateInit__FP10fopAc_ac_c */
void daMsw_CreateInit(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000D3C-00000FE0       .text daMsw_Create__FP10fopAc_ac_c */
static s32 daMsw_Create(fopAc_ac_c*) {
    /* Nonmatching */
}

static actor_method_class l_daMsw_Method = {
    (process_method_func)daMsw_Create,
    (process_method_func)daMsw_Delete,
    (process_method_func)daMsw_Execute,
    (process_method_func)daMsw_IsDelete,
    (process_method_func)daMsw_Draw,
};

actor_process_profile_definition g_profile_MSW = {
    /* LayerID      */ fpcLy_CURRENT_e,
    /* ListID       */ 0x0003,
    /* ListPrio     */ fpcPi_CURRENT_e,
    /* ProcName     */ PROC_MSW,
    /* Proc SubMtd  */ &g_fpcLf_Method.base,
    /* Size         */ sizeof(msw_class),
    /* SizeOther    */ 0,
    /* Parameters   */ 0,
    /* Leaf SubMtd  */ &g_fopAc_Method.base,
    /* Priority     */ 0x008A,
    /* Actor SubMtd */ &l_daMsw_Method,
    /* Status       */ fopAcStts_CULL_e | fopAcStts_UNK40000_e,
    /* Group        */ fopAc_ACTOR_e,
    /* CullType     */ fopAc_CULLBOX_CUSTOM_e,
};
