//
// Generated by dtk
// Translation Unit: d_a_obj_shmrgrd.cpp
//

#include "d/actor/d_a_obj_shmrgrd.h"
#include "d/res/res_shmrgrd.h"
#include "d/d_procname.h"
#include "f_op/f_op_actor_mng.h"
#include "d/d_com_inf_game.h"

struct Attr_c {

};

const Attr_c L_attr = {

};

inline const Attr_c & attr() { return L_attr; }

const dCcD_SrcCyl daObjShmrgrd_c::M_cyl_src_co = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ 0,
        /* SrcObjAt  Atp     */ 0,
        /* SrcObjAt  SPrm    */ 0,
        /* SrcObjTg  Type    */ 0,
        /* SrcObjTg  SPrm    */ 0,
        /* SrcObjCo  SPrm    */ cCcD_CoSPrm_Set_e | cCcD_CoSPrm_IsOther_e | cCcD_CoSPrm_VsGrpAll_e,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ 0,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ 0,
        /* SrcGObjCo SPrm    */ 0,
    },
    // cM3dGCylS
    {
        /* Center */ 0.0f, 0.0f, 0.0f,
        /* Radius */ 100.0f,
        /* Height */ 112.5f,
    },
};
const dCcD_SrcCyl daObjShmrgrd_c::M_cyl_src_at = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ 0,
        /* SrcObjAt  Atp     */ 0,
        /* SrcObjAt  SPrm    */ 0,
        /* SrcObjTg  Type    */ 0,
        /* SrcObjTg  SPrm    */ 0,
        /* SrcObjCo  SPrm    */ cCcD_CoSPrm_Set_e | cCcD_CoSPrm_IsOther_e | cCcD_CoSPrm_VsGrpAll_e,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ 0,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ 0,
        /* SrcGObjCo SPrm    */ 0,
    },
    // cM3dGCylS
    {
        /* Center */ 0.0f, 0.0f, 0.0f,
        /* Radius */ 100.0f,
        /* Height */ 112.5f,
    },
};
const dCcD_SrcCyl daObjShmrgrd_c::M_cyl_src_tg = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ 0,
        /* SrcObjAt  Atp     */ 0,
        /* SrcObjAt  SPrm    */ 0,
        /* SrcObjTg  Type    */ 0,
        /* SrcObjTg  SPrm    */ 0,
        /* SrcObjCo  SPrm    */ cCcD_CoSPrm_Set_e | cCcD_CoSPrm_IsOther_e | cCcD_CoSPrm_VsGrpAll_e,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ 0,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ 0,
        /* SrcGObjCo SPrm    */ 0,
    },
    // cM3dGCylS
    {
        /* Center */ 0.0f, 0.0f, 0.0f,
        /* Radius */ 100.0f,
        /* Height */ 112.5f,
    },
};
const dCcD_SrcCyl daObjShmrgrd_c::M_cyl_src_gap_co = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ 0,
        /* SrcObjAt  Atp     */ 0,
        /* SrcObjAt  SPrm    */ 0,
        /* SrcObjTg  Type    */ 0,
        /* SrcObjTg  SPrm    */ 0,
        /* SrcObjCo  SPrm    */ cCcD_CoSPrm_Set_e | cCcD_CoSPrm_IsOther_e | cCcD_CoSPrm_VsGrpAll_e,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ 0,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ 0,
        /* SrcGObjCo SPrm    */ 0,
    },
    // cM3dGCylS
    {
        /* Center */ 0.0f, 0.0f, 0.0f,
        /* Radius */ 100.0f,
        /* Height */ 112.5f,
    },
};
const char daObjShmrgrd_c::M_arcname[] = "Shmrgrd";

/* 000000EC-00000358       .text __ct__14daObjShmrgrd_cFv */
daObjShmrgrd_c::daObjShmrgrd_c() {
    /* Nonmatching */
}

/* 000005A8-000005C8       .text solidHeapCB__14daObjShmrgrd_cFP10fopAc_ac_c */
BOOL daObjShmrgrd_c::solidHeapCB(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 000005C8-000006E0       .text create_heap__14daObjShmrgrd_cFv */
bool daObjShmrgrd_c::create_heap() {
    J3DModelData* mdl_data = static_cast<J3DModelData *>(dComIfG_getObjectRes(M_arcname, SHMRGRD_BDL_SHMRGRD));
    JUT_ASSERT(0x21A, mdl_data != NULL);
    mpModel = mDoExt_J3DModel__create(mdl_data, 0, 0x11020203);
    if (mpModel) {
        mdl_data->getJointNodePointer(2)->setCallBack(jnodeCB);
        mpModel->setUserArea((u32) this);
        mpBgW = dBgW_NewSet((cBgD_t *)dComIfG_getObjectRes(M_arcname, SHMRGRD_DZB_HGBASE), cBgW::MOVE_BG_e, &mMtx);
        if (mpBgW) {
            return true;
        }
    }
    return false;
}

/* 000006E0-00000964       .text _create__14daObjShmrgrd_cFv */
cPhs_State daObjShmrgrd_c::_create() {
    /* Nonmatching */
    fopAcM_SetupActor(this, daObjShmrgrd_c);
    cPhs_State phase_state = dComIfG_resLoad(&mPhs, M_arcname);
    if (phase_state == cPhs_COMPLEATE_e) {
        if (fopAcM_entrySolidHeap(this, solidHeapCB, 0x12A0)) {
            fopAcM_SetMtx(this, mpModel->getBaseTRMtx());
            init_mtx();
            fopAcM_setCullSizeBox(this, -90.0f, 0.0f, -90.0f, 90.0f, 120.0f, 90.0f);
            mSttsCo.Init(0xFF, 0xFF, this);
            mCylCo.Set(M_cyl_src_co);
            mCylCo.SetStts(&mSttsCo);
            mSttsAt.Init(0xFF, 0xFF, this);
            mCylAt.Set(M_cyl_src_at);
            mCylAt.SetStts(&mSttsAt);
            mCylAt.OnTgNoHitMark();
            mSttsTg.Init(0xFF, 0xFF, this);
            mCylTg.Set(M_cyl_src_tg);
            mCylTg.SetStts(&mSttsTg);
            mSttsGapCo.Init(0xFF, 0xFF, this);
            mCylGapCo.Set(M_cyl_src_gap_co);
            mCylGapCo.SetStts(&mSttsGapCo);
            m858 = 0;
            m860 = 0.0f;
            // TODO: set data
            cLib_onBit<u32>(attention_info.flags, fopAc_Attn_LOCKON_MISC_e);
            attention_info.distances[fopAc_Attn_TYPE_MISC_e] = 0x2D;
            if (is_switch()) {
                mode_lower_init();
            } else {
                mode_upper_init();
            }
            register_list();
            mDoMtx_copy(mpModel->getBaseTRMtx(), mMtx);
            dComIfG_Bgsp()->Regist(mpBgW, this);
        } else {
            phase_state = cPhs_ERROR_e;
        }
    }
    return phase_state;
}

/* 00000964-00000A14       .text _delete__14daObjShmrgrd_cFv */
bool daObjShmrgrd_c::_delete() {
    /* Nonmatching */
}

/* 00000A14-00000A48       .text search_target_next__14daObjShmrgrd_cFP14daObjShmrgrd_c */
void daObjShmrgrd_c::search_target_next(daObjShmrgrd_c*) {
    /* Nonmatching */
}

/* 00000A48-00000AA4       .text register_list__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::register_list() {
    /* Nonmatching */
}

/* 00000AA4-00000B18       .text leave_list__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::leave_list() {
    /* Nonmatching */
}

/* 00000B18-00000C8C       .text search_gap__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::search_gap() {
    /* Nonmatching */
}

/* 00000C8C-00000D2C       .text daObjShmrgrd_get_at_v__FP4cXyzP4cXyz */
void daObjShmrgrd_get_at_v(cXyz*, cXyz*) {
    /* Nonmatching */
}

/* 00000D2C-00000DF0       .text set_gap_co__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::set_gap_co() {
    /* Nonmatching */
}

/* 00000DF0-00000E2C       .text init_mtx__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::init_mtx() {
    /* Nonmatching */
}

/* 00000E2C-00000E98       .text set_mtx__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::set_mtx() {
    /* Nonmatching */
}

/* 00000E98-00000EF4       .text check_player_angle__14daObjShmrgrd_cFP10fopAc_ac_c */
void daObjShmrgrd_c::check_player_angle(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000EF4-0000102C       .text set_damage__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::set_damage() {
    /* Nonmatching */
}

/* 0000102C-00001090       .text vib_start__14daObjShmrgrd_cFsf */
void daObjShmrgrd_c::vib_start(short, float) {
    /* Nonmatching */
}

/* 00001090-00001108       .text vib_proc__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::vib_proc() {
    /* Nonmatching */
}

/* 00001108-00001114       .text crush_start__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::crush_start() {
    /* Nonmatching */
}

/* 00001114-00001178       .text crush_proc__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::crush_proc() {
    /* Nonmatching */
}

/* 00001178-00001340       .text eff_crush__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::eff_crush() {
    /* Nonmatching */
}

/* 00001340-000013FC       .text calc_top_pos__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::calc_top_pos() {
    /* Nonmatching */
}

/* 000013FC-0000151C       .text jnodeCB__14daObjShmrgrd_cFP7J3DNodei */
BOOL daObjShmrgrd_c::jnodeCB(J3DNode*, int) {
    /* Nonmatching */
}

/* 0000151C-00001578       .text mode_upper_init__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::mode_upper_init() {
    /* Nonmatching */
}

/* 00001578-00001690       .text mode_upper__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::mode_upper() {
    /* Nonmatching */
}

/* 00001690-00001718       .text mode_u_l_init__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::mode_u_l_init() {
    /* Nonmatching */
}

/* 00001718-0000179C       .text mode_u_l__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::mode_u_l() {
    /* Nonmatching */
}

/* 0000179C-000017C0       .text mode_lower_init__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::mode_lower_init() {
    /* Nonmatching */
}

/* 000017C0-000017C4       .text mode_lower__14daObjShmrgrd_cFv */
void daObjShmrgrd_c::mode_lower() {
    /* Nonmatching */
}

/* 000017C4-000019D4       .text _execute__14daObjShmrgrd_cFv */
bool daObjShmrgrd_c::_execute() {
    /* Nonmatching */
}

/* 000019D4-00001A74       .text _draw__14daObjShmrgrd_cFv */
bool daObjShmrgrd_c::_draw() {
    /* Nonmatching */
}

namespace {
/* 00001A74-00001A94       .text Mthd_Create__29@unnamed@d_a_obj_shmrgrd_cpp@FPv */
cPhs_State Mthd_Create(void*) {
    /* Nonmatching */
}

/* 00001A94-00001AB8       .text Mthd_Delete__29@unnamed@d_a_obj_shmrgrd_cpp@FPv */
BOOL Mthd_Delete(void*) {
    /* Nonmatching */
}

/* 00001AB8-00001ADC       .text Mthd_Execute__29@unnamed@d_a_obj_shmrgrd_cpp@FPv */
BOOL Mthd_Execute(void*) {
    /* Nonmatching */
}

/* 00001ADC-00001B00       .text Mthd_Draw__29@unnamed@d_a_obj_shmrgrd_cpp@FPv */
BOOL Mthd_Draw(void*) {
    /* Nonmatching */
}

/* 00001B00-00001B08       .text Mthd_IsDelete__29@unnamed@d_a_obj_shmrgrd_cpp@FPv */
BOOL Mthd_IsDelete(void*) {
    /* Nonmatching */
}

static actor_method_class Shmrgrd_Mthd_Table = {
    (process_method_func)Mthd_Create,
    (process_method_func)Mthd_Delete,
    (process_method_func)Mthd_Execute,
    (process_method_func)Mthd_IsDelete,
    (process_method_func)Mthd_Draw,
};
}; // namespace

actor_process_profile_definition g_profile_Obj_Shmrgrd = {
    /* LayerID      */ fpcLy_CURRENT_e,
    /* ListID       */ 0x0003,
    /* ListPrio     */ fpcPi_CURRENT_e,
    /* ProcName     */ PROC_Obj_Shmrgrd,
    /* Proc SubMtd  */ &g_fpcLf_Method.base,
    /* Size         */ sizeof(daObjShmrgrd_c),
    /* SizeOther    */ 0,
    /* Parameters   */ 0,
    /* Leaf SubMtd  */ &g_fopAc_Method.base,
    /* Priority     */ 0x004B,
    /* Actor SubMtd */ &Shmrgrd_Mthd_Table,
    /* Status       */ fopAcStts_CULL_e | fopAcStts_UNK40000_e,
    /* Group        */ fopAc_ACTOR_e,
    /* CullType     */ fopAc_CULLBOX_CUSTOM_e,
};
