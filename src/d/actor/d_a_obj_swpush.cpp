//
// Generated by dtk
// Translation Unit: d_a_obj_swpush.cpp
//

#include "d/actor/d_a_obj_swpush.h"
#include "d/d_procname.h"
#include "d/d_com_inf_game.h"
#include "d/d_bg_w_sv.h"

#include "weak_bss_936_to_1036.h" // IWYU pragma: keep

const char daObjSwpush::Act_c::M_arcname_kbota[] = "Kbota_00";
const char daObjSwpush::Act_c::M_arcname_hhbot[] = "Hhbot";

/* 000000EC-0000011C       .text prmZ_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::prmZ_init() {
    if (m302) {
        return;
    }
    m300 = home.angle.z;
    m302 = true;
    home.angle.z = 0;
    current.angle.z = 0;
    shape_angle.z = 0;
}

/* 0000011C-0000019C       .text is_switch2__Q211daObjSwpush5Act_cCFv */
BOOL daObjSwpush::Act_c::is_switch2() const {
    s32 prm = prmZ_get_swSave2();
    if (prm >= 1) {
        prm = m300 & 0xff;
    } else {
        prm = 0xff;
    }
    BOOL rt;
    if (prm == 0xff) {
        rt = false;
    } else {
        rt = fopAcM_isSwitch(const_cast<Act_c*>(this), prm);
    }

    return rt;
}

/* 0000019C-000001C0       .text solidHeapCB__Q211daObjSwpush5Act_cFP10fopAc_ac_c */
BOOL daObjSwpush::Act_c::solidHeapCB(fopAc_ac_c* i_this) {
    return static_cast<daObjSwpush::Act_c*>(i_this)->create_heap();
}

/* 000001C0-00000478       .text create_heap__Q211daObjSwpush5Act_cFv */
bool daObjSwpush::Act_c::create_heap() {
    J3DModelData* model_data = (J3DModelData*) dComIfG_getObjectRes(attr().m18, attr().m22[prm_get_mdl()]);
    JUT_ASSERT(0x205, model_data != NULL);
    mpModel = mDoExt_J3DModel__create(model_data, 0x80000, attr().m1C ? 0x11020022 : 0x11000022);
    if (mpModel) {
        model_data->getJointNodePointer(1)->setCallBack(jnodeCB);
        mpModel->setUserArea((u32) this);
    }
    int iVar7 = 1;
    if (attr().m1C != NULL) {
        J3DAnmTexPattern* btp_data = (J3DAnmTexPattern*) dComIfG_getObjectRes(attr().m1C, attr().m26);
        JUT_ASSERT(0x21E, btp_data != NULL);
        iVar7 = mBtpAnm.init(model_data, btp_data, 1, 0, 1.0f, 0, -1, false, 0);
    }
    cBgD_t* bg_data = (cBgD_t*) dComIfG_getObjectRes(attr().m14, attr().m20);
    bool bVar1 = false;
    JUT_ASSERT(0x22B, bg_data != NULL);
    dBgWSv* bgW = new dBgWSv();
    if (bgW != NULL && !bgW->Set(bg_data, 0)) {
        bVar1 = true;
    }
    int rt = 0;
    if (mpModel != NULL && iVar7 != 0) {
        if (mMtx[0][0] != 0.0f && bVar1) {
            rt = 1;
        }
    }
    if (rt == 0) {
        mMtx[0][0] = 0.0f;
    }
    return rt;
}

/* 00000478-0000051C       .text create_res_load__Q211daObjSwpush5Act_cFv */
cPhs_State daObjSwpush::Act_c::create_res_load() {
    cPhs_State rt = attr().mKbotaResName != NULL ? dComIfG_resLoad(&mPhs, attr().mKbotaResName) : cPhs_COMPLEATE_e;
    if (rt != cPhs_COMPLEATE_e) {
        return rt;
    }
    rt = attr().mHhbotResName != NULL ? dComIfG_resLoad(&mPhs, attr().mHhbotResName) : cPhs_COMPLEATE_e;
    if (rt != cPhs_COMPLEATE_e) {
        return rt;
    }
    return cPhs_COMPLEATE_e;
}

/* 0000051C-000008C4       .text Mthd_Create__Q211daObjSwpush5Act_cFv */
cPhs_State daObjSwpush::Act_c::Mthd_Create() {
    fopAcM_SetupActor(this, daObjSwpush::Act_c);
    prmZ_init();
    mType = prm_get_type();
    cPhs_State phase_state = create_res_load();
    if (phase_state != cPhs_COMPLEATE_e) {
        return phase_state;
    }

    scale.x *= attr().m08;
    scale.z *= attr().m08;
    if (fopAcM_entrySolidHeap(this, solidHeapCB, attr().m00)) {
        dComIfG_Bgsp()->Regist(mpBgW, this);
        mDoMtx_stack_c::transM(current.pos);
        mDoMtx_stack_c::ZXYrotM(shape_angle);
        mDoMtx_stack_c::scaleM(scale);
        mDoMtx_copy(mDoMtx_stack_c::get(), mMtx);
        mpBgW->ClrNoCalcVtx();
        mpBgW->SetBaseMtxP(&mMtx);
        mpBgW->GlobalVtx();
        mpBgW->SetBaseMtxP(NULL);
        mpBgW->SetNoCalcVtx();
        m2D4 = mpBgW->GetVtxTbl()[6].y;
        mpBgW->SetRideCallback(rideCB);
        fopAcM_SetMtx(this, mpModel->getBaseTRMtx());
        init_mtx();
        fopAcM_setCullSizeBox(this, attr().m08 * -60.0f, -2.0f, attr().m08 * -60.0f, attr().m08 * 60.0f, 39.0f, attr().m08 * 60.0f);
        // TODO: initialize data
        set_btp_frame();

        if (!cLib_checkBit<u32>(attr().m04, 0x4) && (is_switch() || cLib_checkBit<u32>(attr().m04, 0x1)) && (!is_switch() || !cLib_checkBit<u32>(attr().m04, 0x1))) {
            mode_lower_init();
        } else {
            mode_upper_init();
        }

        // dComIfGp_evmng_getEventIdx(prm_get_mdl());
        demo_non_init();
        return cPhs_COMPLEATE_e;
    } else {
        return cPhs_ERROR_e;
    }
}

/* 00000968-000009F8       .text Mthd_Delete__Q211daObjSwpush5Act_cFv */
BOOL daObjSwpush::Act_c::Mthd_Delete() {
    /* Nonmatching */
}

/* 000009F8-00000A64       .text set_mtx__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::set_mtx() {
    /* Nonmatching */
}

/* 00000A64-00000AA0       .text init_mtx__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::init_mtx() {
    /* Nonmatching */
}

/* 00000AA0-00000B34       .text set_btp_frame__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::set_btp_frame() {
    /* Nonmatching */
}

/* 00000B34-00000EDC       .text rideCB__Q211daObjSwpush5Act_cFP4dBgWP10fopAc_ac_cP10fopAc_ac_c */
void daObjSwpush::Act_c::rideCB(dBgW*, fopAc_ac_c*, fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000FBC-0000105C       .text jnodeCB__Q211daObjSwpush5Act_cFP7J3DNodei */
BOOL daObjSwpush::Act_c::jnodeCB(J3DNode*, int) {
    /* Nonmatching */
}

/* 0000105C-00001170       .text calc_top_pos__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::calc_top_pos() {
    /* Nonmatching */
}

/* 00001170-0000117C       .text top_bg_aim_req__Q211daObjSwpush5Act_cFfs */
void daObjSwpush::Act_c::top_bg_aim_req(float, short) {
    /* Nonmatching */
}

/* 0000117C-0000130C       .text set_push_flag__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::set_push_flag() {
    /* Nonmatching */
}

/* 0000130C-0000132C       .text mode_upper_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::mode_upper_init() {
    /* Nonmatching */
}

/* 0000132C-00001508       .text mode_upper__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::mode_upper() {
    /* Nonmatching */
}

/* 00001508-00001568       .text mode_u_l_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::mode_u_l_init() {
    /* Nonmatching */
}

/* 00001568-000016DC       .text mode_u_l__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::mode_u_l() {
    /* Nonmatching */
}

/* 000016DC-000016FC       .text mode_lower_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::mode_lower_init() {
    /* Nonmatching */
}

/* 000016FC-00001898       .text mode_lower__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::mode_lower() {
    /* Nonmatching */
}

/* 00001898-000018D0       .text mode_l_u_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::mode_l_u_init() {
    /* Nonmatching */
}

/* 000018D0-00001990       .text mode_l_u__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::mode_l_u() {
    /* Nonmatching */
}

/* 00001990-0000199C       .text demo_non_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_non_init() {
    /* Nonmatching */
}

/* 0000199C-000019A0       .text demo_non__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_non() {
    /* Nonmatching */
}

/* 000019A0-000019F8       .text demo_reqPause_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_reqPause_init() {
    /* Nonmatching */
}

/* 000019F8-00001A2C       .text demo_reqPause__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_reqPause() {
    /* Nonmatching */
}

/* 00001A2C-00001A54       .text demo_runPause_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_runPause_init() {
    /* Nonmatching */
}

/* 00001A54-00001AA0       .text demo_runPause__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_runPause() {
    /* Nonmatching */
}

/* 00001AA0-00001AF8       .text demo_stop_puase__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_stop_puase() {
    /* Nonmatching */
}

/* 00001AF8-00001BA4       .text demo_reqSw_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_reqSw_init() {
    /* Nonmatching */
}

/* 00001BA4-00001C18       .text demo_reqSw__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_reqSw() {
    /* Nonmatching */
}

/* 00001C18-00001C24       .text demo_runSw_init__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_runSw_init() {
    /* Nonmatching */
}

/* 00001C24-00001C84       .text demo_runSw__Q211daObjSwpush5Act_cFv */
void daObjSwpush::Act_c::demo_runSw() {
    /* Nonmatching */
}

/* 00001C84-00001F14       .text Mthd_Execute__Q211daObjSwpush5Act_cFv */
BOOL daObjSwpush::Act_c::Mthd_Execute() {
    /* Nonmatching */
}

/* 00001F14-00001FF8       .text Mthd_Draw__Q211daObjSwpush5Act_cFv */
BOOL daObjSwpush::Act_c::Mthd_Draw() {
    /* Nonmatching */
}

namespace daObjSwpush {
namespace {
/* 00001FF8-00002018       .text Mthd_Create__Q211daObjSwpush28@unnamed@d_a_obj_swpush_cpp@FPv */
cPhs_State Mthd_Create(void*) {
    /* Nonmatching */
}

/* 00002018-00002038       .text Mthd_Delete__Q211daObjSwpush28@unnamed@d_a_obj_swpush_cpp@FPv */
BOOL Mthd_Delete(void*) {
    /* Nonmatching */
}

/* 00002038-00002058       .text Mthd_Execute__Q211daObjSwpush28@unnamed@d_a_obj_swpush_cpp@FPv */
BOOL Mthd_Execute(void*) {
    /* Nonmatching */
}

/* 00002058-00002078       .text Mthd_Draw__Q211daObjSwpush28@unnamed@d_a_obj_swpush_cpp@FPv */
BOOL Mthd_Draw(void*) {
    /* Nonmatching */
}

/* 00002078-00002080       .text Mthd_IsDelete__Q211daObjSwpush28@unnamed@d_a_obj_swpush_cpp@FPv */
BOOL Mthd_IsDelete(void*) {
    /* Nonmatching */
}

static actor_method_class Mthd_Table = {
    (process_method_func)Mthd_Create,
    (process_method_func)Mthd_Delete,
    (process_method_func)Mthd_Execute,
    (process_method_func)Mthd_IsDelete,
    (process_method_func)Mthd_Draw,
};
}; // namespace
}; // namespace daObjSwpush

actor_process_profile_definition g_profile_Obj_Swpush = {
    /* LayerID      */ fpcLy_CURRENT_e,
    /* ListID       */ 0x0002,
    /* ListPrio     */ fpcPi_CURRENT_e,
    /* ProcName     */ PROC_Obj_Swpush,
    /* Proc SubMtd  */ &g_fpcLf_Method.base,
    /* Size         */ sizeof(daObjSwpush::Act_c),
    /* SizeOther    */ 0,
    /* Parameters   */ 0,
    /* Leaf SubMtd  */ &g_fopAc_Method.base,
    /* Priority     */ 0x0010,
    /* Actor SubMtd */ &daObjSwpush::Mthd_Table,
    /* Status       */ fopAcStts_CULL_e | fopAcStts_UNK40000_e,
    /* Group        */ fopAc_ACTOR_e,
    /* CullType     */ fopAc_CULLBOX_CUSTOM_e,
};
