/**
 * d_a_player_tact.inc
 *
 * Code relating to the Wind Waker item.
 * 
 * This file is not a standalone translation unit and is instead directly 
 * included into d_a_player_main.cpp.
 * 
 * The original name of this file is not known, but a best guess was taken 
 * based on the original names of the functions it contains.
*/

#include "d/actor/d_a_player_link.h"

/* 8014D778-8014D7D4       .text getDayNightParamData__9daPy_lk_cFv */
void daPy_lk_c::getDayNightParamData() {
    /* Nonmatching */
}

/* 8014D7D4-8014D8AC       .text setTactModel__9daPy_lk_cFv */
void daPy_lk_c::setTactModel() {
    /* Nonmatching */
}

/* 8014D8AC-8014D8F4       .text checkNpcStatus__9daPy_lk_cFv */
void daPy_lk_c::checkNpcStatus() {
    /* Nonmatching */
}

/* 8014D8F4-8014D938       .text getTactPlayRightArmAnm__9daPy_lk_cFl */
void daPy_lk_c::getTactPlayRightArmAnm(long) {
    /* Nonmatching */
}

/* 8014D938-8014D97C       .text getTactPlayLeftArmAnm__9daPy_lk_cFl */
void daPy_lk_c::getTactPlayLeftArmAnm(long) {
    /* Nonmatching */
}

/* 8014D97C-8014D9A4       .text checkEndTactMusic__9daPy_lk_cCFv */
void daPy_lk_c::checkEndTactMusic() const {
    /* Nonmatching */
}

/* 8014D9A4-8014D9D0       .text getTactMetronomeRate__9daPy_lk_cFv */
void daPy_lk_c::getTactMetronomeRate() {
    /* Nonmatching */
}

/* 8014D9D0-8014D9F8       .text checkTactLastInput__9daPy_lk_cFv */
void daPy_lk_c::checkTactLastInput() {
    /* Nonmatching */
}

/* 8014D9F8-8014DA78       .text setTactZev__9daPy_lk_cFUiiPc */
void daPy_lk_c::setTactZev(unsigned int, int, char*) {
    /* Nonmatching */
}

/* 8014DA78-8014DACC       .text getTactTopPos__9daPy_lk_cFP4cXyz */
void daPy_lk_c::getTactTopPos(cXyz*) {
    /* Nonmatching */
}

/* 8014DACC-8014DB00       .text getTactNormalWait__9daPy_lk_cCFv */
void daPy_lk_c::getTactNormalWait() const {
    /* Nonmatching */
}

/* 8014DB00-8014DB2C       .text getTactMusic__9daPy_lk_cCFv */
void daPy_lk_c::getTactMusic() const {
    /* Nonmatching */
}

/* 8014DB2C-8014DB74       .text getTactTimerCancel__9daPy_lk_cCFv */
void daPy_lk_c::getTactTimerCancel() const {
    /* Nonmatching */
}

/* 8014DB74-8014DB9C       .text checkTactPlayMelody__9daPy_lk_cFv */
void daPy_lk_c::checkTactPlayMelody() {
    /* Nonmatching */
}

/* 8014DB9C-8014DBEC       .text resetTactCount__9daPy_lk_cFv */
void daPy_lk_c::resetTactCount() {
    /* Nonmatching */
}

/* 8014DBEC-8014E100       .text procTactWait_init__9daPy_lk_cFi */
void daPy_lk_c::procTactWait_init(int) {
    /* Nonmatching */
}

/* 8014E100-8014E9A4       .text procTactWait__9daPy_lk_cFv */
void daPy_lk_c::procTactWait() {
    /* Nonmatching */
}

/* 8014E9A4-8014EBA0       .text procTactPlay_init__9daPy_lk_cFlii */
void daPy_lk_c::procTactPlay_init(long, int, int) {
    /* Nonmatching */
}

/* 8014EBA0-8014EFD4       .text procTactPlay__9daPy_lk_cFv */
void daPy_lk_c::procTactPlay() {
    /* Nonmatching */
}

/* 8014EFD4-8014F210       .text procTactPlayEnd_init__9daPy_lk_cFi */
void daPy_lk_c::procTactPlayEnd_init(int) {
    /* Nonmatching */
}

/* 8014F210-8014F4DC       .text procTactPlayEnd__9daPy_lk_cFv */
void daPy_lk_c::procTactPlayEnd() {
    /* Nonmatching */
}

/* 8014F4DC-8014F690       .text procTactPlayOriginal_init__9daPy_lk_cFv */
void daPy_lk_c::procTactPlayOriginal_init() {
    /* Nonmatching */
}

/* 8014F690-8014F8A0       .text procTactPlayOriginal__9daPy_lk_cFv */
void daPy_lk_c::procTactPlayOriginal() {
    /* Nonmatching */
}
