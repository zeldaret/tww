//
// Generated by dtk
// Translation Unit: d_a_stone.cpp
//

#include "d/actor/d_a_stone.h"
#include "dolphin/types.h"

/* 000000EC-00000110       .text CreateHeapCB__7daStoneFP10fopAc_ac_c */
void daStone::CreateHeapCB(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000110-000002B0       .text create_heap__Q27daStone5Act_cFv */
void daStone::Act_c::create_heap() {
    /* Nonmatching */
}

/* 000002B0-0000033C       .text chk_appear__Q27daStone5Act_cFv */
void daStone::Act_c::chk_appear() {
    /* Nonmatching */
}

/* 0000033C-00000744       .text _create__Q27daStone5Act_cFv */
s32 daStone::Act_c::_create() {
    /* Nonmatching */
}

/* 000012C8-00001324       .text _delete__Q27daStone5Act_cFv */
BOOL daStone::Act_c::_delete() {
    /* Nonmatching */
}

/* 00001324-000013F8       .text mode_wait_init__Q27daStone5Act_cFv */
void daStone::Act_c::mode_wait_init() {
    /* Nonmatching */
}

/* 000013F8-0000147C       .text mode_wait__Q27daStone5Act_cFv */
void daStone::Act_c::mode_wait() {
    /* Nonmatching */
}

/* 0000147C-000014FC       .text mode_carry_init__Q27daStone5Act_cFv */
void daStone::Act_c::mode_carry_init() {
    /* Nonmatching */
}

/* 000014FC-00001600       .text mode_carry__Q27daStone5Act_cFv */
void daStone::Act_c::mode_carry() {
    /* Nonmatching */
}

/* 00001600-00001730       .text mode_drop_init__Q27daStone5Act_cFv */
void daStone::Act_c::mode_drop_init() {
    /* Nonmatching */
}

/* 00001730-000017A4       .text mode_drop__Q27daStone5Act_cFv */
void daStone::Act_c::mode_drop() {
    /* Nonmatching */
}

/* 000017A4-00001958       .text mode_sink_init__Q27daStone5Act_cFv */
void daStone::Act_c::mode_sink_init() {
    /* Nonmatching */
}

/* 00001958-000019C8       .text mode_sink__Q27daStone5Act_cFv */
void daStone::Act_c::mode_sink() {
    /* Nonmatching */
}

/* 000019C8-00001C0C       .text mode_proc_call__Q27daStone5Act_cFv */
void daStone::Act_c::mode_proc_call() {
    /* Nonmatching */
}

/* 00001C0C-00001CAC       .text cull_set_draw__Q27daStone5Act_cFv */
void daStone::Act_c::cull_set_draw() {
    /* Nonmatching */
}

/* 00001CAC-00001D4C       .text cull_set_move__Q27daStone5Act_cFv */
void daStone::Act_c::cull_set_move() {
    /* Nonmatching */
}

/* 00001D4C-00001F00       .text damaged__Q27daStone5Act_cFi */
void daStone::Act_c::damaged(int) {
    /* Nonmatching */
}

/* 00001F00-00002058       .text damage_cc_proc__Q27daStone5Act_cFv */
void daStone::Act_c::damage_cc_proc() {
    /* Nonmatching */
}

/* 00002058-000021F4       .text damage_bg_proc__Q27daStone5Act_cFv */
void daStone::Act_c::damage_bg_proc() {
    /* Nonmatching */
}

/* 000021F4-000023F4       .text damage_bg_proc_directly__Q27daStone5Act_cFv */
void daStone::Act_c::damage_bg_proc_directly() {
    /* Nonmatching */
}

/* 000023F4-0000252C       .text set_mtx__Q27daStone5Act_cFv */
void daStone::Act_c::set_mtx() {
    /* Nonmatching */
}

/* 0000252C-0000259C       .text init_mtx__Q27daStone5Act_cFv */
void daStone::Act_c::init_mtx() {
    /* Nonmatching */
}

/* 0000259C-0000266C       .text init_rot_throw__Q27daStone5Act_cFv */
void daStone::Act_c::init_rot_throw() {
    /* Nonmatching */
}

/* 0000266C-000026F0       .text init_rot_clean__Q27daStone5Act_cFv */
void daStone::Act_c::init_rot_clean() {
    /* Nonmatching */
}

/* 000026F0-00002824       .text set_drop_rot__Q27daStone5Act_cFv */
void daStone::Act_c::set_drop_rot() {
    /* Nonmatching */
}

/* 00002824-00002958       .text set_sink_rot__Q27daStone5Act_cFv */
void daStone::Act_c::set_sink_rot() {
    /* Nonmatching */
}

/* 00002958-00002AF0       .text eff_break__Q27daStone5Act_cFv */
void daStone::Act_c::eff_break() {
    /* Nonmatching */
}

/* 00002AF0-00002B4C       .text eff_hit_water_splash__Q27daStone5Act_cFv */
void daStone::Act_c::eff_hit_water_splash() {
    /* Nonmatching */
}

/* 00002B4C-00002BA4       .text eff_hit_lava_splash__Q27daStone5Act_cFv */
void daStone::Act_c::eff_hit_lava_splash() {
    /* Nonmatching */
}

/* 00002BA4-00002BE0       .text eff_land_smoke__Q27daStone5Act_cFv */
void daStone::Act_c::eff_land_smoke() {
    /* Nonmatching */
}

/* 00002BE0-00002D14       .text bg_crr_water__Q27daStone5Act_cFv */
void daStone::Act_c::bg_crr_water() {
    /* Nonmatching */
}

/* 00002D14-00002DA0       .text bg_crr_lava__Q27daStone5Act_cFv */
void daStone::Act_c::bg_crr_lava() {
    /* Nonmatching */
}

/* 00002DA0-00002DEC       .text chk_sink_lava__Q27daStone5Act_cFv */
void daStone::Act_c::chk_sink_lava() {
    /* Nonmatching */
}

/* 00002DEC-00002DF4       .text chk_sink_water__Q27daStone5Act_cFv */
void daStone::Act_c::chk_sink_water() {
    /* Nonmatching */
}

/* 00002DF4-00002E84       .text water_tention__Q27daStone5Act_cFv */
void daStone::Act_c::water_tention() {
    /* Nonmatching */
}

/* 00002E84-00002FB8       .text se_fall_water__Q27daStone5Act_cFv */
void daStone::Act_c::se_fall_water() {
    /* Nonmatching */
}

/* 00002FB8-000030D0       .text se_fall_lava__Q27daStone5Act_cFv */
void daStone::Act_c::se_fall_lava() {
    /* Nonmatching */
}

/* 000030D0-00003124       .text set_senv__Q27daStone5Act_cCFii */
void daStone::Act_c::set_senv(int, int) const {
    /* Nonmatching */
}

/* 00003124-0000315C       .text cam_lockoff__Q27daStone5Act_cCFv */
void daStone::Act_c::cam_lockoff() const {
    /* Nonmatching */
}

/* 0000315C-00003358       .text _execute__Q27daStone5Act_cFv */
BOOL daStone::Act_c::_execute() {
    /* Nonmatching */
}

/* 00003358-0000344C       .text _draw__Q27daStone5Act_cFv */
BOOL daStone::Act_c::_draw() {
    /* Nonmatching */
}

/* 0000344C-0000346C       .text Create__Q27daStone6MethodFPv */
void daStone::Method::Create(void*) {
    /* Nonmatching */
}

/* 0000346C-00003490       .text Delete__Q27daStone6MethodFPv */
void daStone::Method::Delete(void*) {
    /* Nonmatching */
}

/* 00003490-000034B4       .text Execute__Q27daStone6MethodFPv */
void daStone::Method::Execute(void*) {
    /* Nonmatching */
}

/* 000034B4-000034D8       .text Draw__Q27daStone6MethodFPv */
void daStone::Method::Draw(void*) {
    /* Nonmatching */
}

/* 000034D8-000034E0       .text IsDelete__Q27daStone6MethodFPv */
void daStone::Method::IsDelete(void*) {
    /* Nonmatching */
}
