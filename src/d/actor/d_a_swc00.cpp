//
// Generated by dtk
// Translation Unit: d_a_swc00.cpp
//

#include "d/actor/d_a_swc00.h"
#include "f_op/f_op_actor_mng.h"
#include "JSystem/JKernel/JKRHeap.h"
#include "d/d_procname.h"
#include "d/d_com_inf_game.h"

static BOOL daSwc00_Execute(swc00_class* i_this) {
    s32 enable_sw = daSwc00_getSw2No(i_this);
    fopAc_ac_c* actor = i_this;
    if(enable_sw == 0xFF || dComIfGs_isSwitch(enable_sw, fopAcM_GetRoomNo(i_this))) {
        s32 swBit = daSwc00_getSw1No(i_this);

        f32 xz_dist2 = fopAcM_searchPlayerDistanceXZ2(i_this);
        f32 y_diff = fopAcM_searchPlayerDistanceY(i_this);
        if(xz_dist2 < i_this->mScale.x && (-100.0f < y_diff && y_diff < i_this->mScale.y)) {
            dComIfGs_onSwitch(swBit, fopAcM_GetRoomNo(i_this));

            if(daSwc00_getType(i_this) != 0) {
                fopAcM_delete(actor);
            }
        }
        else if(daSwc00_getType(i_this) == 0) {
            dComIfGs_offSwitch(swBit, fopAcM_GetRoomNo(i_this));
        }
    }

    return TRUE;
}

static BOOL daSwc00_IsDelete(swc00_class* i_this) {
    return TRUE;
}

static BOOL daSwc00_Delete(swc00_class* i_this) {
    return TRUE;
}

static s32 daSwc00_Create(fopAc_ac_c* i_actor) {
    fopAcM_SetupActor(i_actor, swc00_class);

    swc00_class* i_this = (swc00_class*)i_actor;

    if(dComIfGs_isSwitch(daSwc00_getSw1No(i_this), fopAcM_GetRoomNo(i_this))) {
        if(daSwc00_getType(i_this) == 0) {
            s32 swBit = daSwc00_getSw1No(i_this);
            dComIfGs_offSwitch(swBit, fopAcM_GetRoomNo(i_this));
        }
        else {
            return cPhs_ERROR_e;
        }
    }

    i_this->mScale.x *= 100.0f;
    i_this->mScale.x += 30.0f;
    i_this->mScale.x *= i_this->mScale.x;
    i_this->mScale.y *= 100.0f;

    return cPhs_COMPLEATE_e;
}


static actor_method_class l_daSwc00_Method = {
    (process_method_func)daSwc00_Create,
    (process_method_func)daSwc00_Delete,
    (process_method_func)daSwc00_Execute,
    (process_method_func)daSwc00_IsDelete,
    (process_method_func)0,
};

actor_process_profile_definition g_profile_SWC00 = {
    fpcLy_CURRENT_e,
    7,
    fpcPi_CURRENT_e,
    PROC_SWC00,
    &g_fpcLf_Method.mBase,
    sizeof(swc00_class),
    0,
    0,
    &g_fopAc_Method.base,
    0x011A,
    &l_daSwc00_Method,
    fopAcStts_UNK40000_e,
    fopAc_ACTOR_e,
    fopAc_CULLBOX_0_e,
};
