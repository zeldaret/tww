//
// Generated by dtk
// Translation Unit: d_a_toge.cpp
//

#include "d/actor/d_a_toge.h"
#include "d/d_com_inf_game.h"
#include "m_Do/m_Do_ext.h"

const char daToge_c::m_arcname[] = "Htoge1";
const s16 daToge_c::m_bdlidx = 0x07;
const s16 daToge_c::m_dzbidx = 0x04;
const u32 daToge_c::m_heapsize = 0x5000;
const f32 daToge_c::m_y_min = -150;
// const Vec daToge_c::m_cull_min = { -200.0f, -200.0f, -50.0f, };
// const Vec daToge_c::m_cull_max = { 200.0f, 200.0f, 1600.0f, };

static dCcD_SrcCyl l_cyl_src = {
    // dCcD_SrcGObjInf
    {
        /* Flags             */ 0,
        /* SrcObjAt  Type    */ AT_TYPE_UNK800,
        /* SrcObjAt  Atp     */ 0x1,
        /* SrcObjAt  SPrm    */ AT_SPRM_SET | AT_SPRM_VS_PLAYER,
        /* SrcObjTg  Type    */ AT_TYPE_ALL,
        /* SrcObjTg  SPrm    */ 0,
        /* SrcObjCo  SPrm    */ CO_SPRM_SET | CO_SPRM_IS_UNK8 | CO_SPRM_VS_UNK2 | CO_SPRM_VS_UNK4 |
            CO_SPRM_VS_UNK8,
        /* SrcGObjAt Se      */ 0,
        /* SrcGObjAt HitMark */ 0,
        /* SrcGObjAt Spl     */ dCcG_At_Spl_UNK1,
        /* SrcGObjAt Mtrl    */ 0,
        /* SrcGObjAt SPrm    */ 0,
        /* SrcGObjTg Se      */ 0,
        /* SrcGObjTg HitMark */ 0,
        /* SrcGObjTg Spl     */ 0,
        /* SrcGObjTg Mtrl    */ 0,
        /* SrcGObjTg SPrm    */ G_TG_SPRM_NO_HIT_MARK,
        /* SrcGObjCo SPrm    */ 0,
    },

    // cCcD_SrcCylAttr
    {
        /* Center */ 0.0f,
        0.0f,
        0.0f,
        /* Radius */ 55.0f,
        /* Height */ 150.0f,
    }};

/* 00000078-0000013C       .text _delete__8daToge_cFv */
BOOL daToge_c::_delete() {
    cBgW* temp_r4;
    cBgW* temp_r4_2;
    s32 temp_r0;
    s32 temp_r0_2;
    u8 var_r0;
    u8 var_r0_2;

    dComIfG_resDelete(&m_Phs, m_arcname);

    temp_r4 = this->mpBgW1;
    if (temp_r4 != NULL) {
        temp_r0 = temp_r4->GetId();
        if ((temp_r0 >= 0) && (temp_r0 < 0x100)) {
            var_r0 = 1;
        } else {
            var_r0 = 0;
        }
        if (var_r0 != 0) {
            g_dComIfG_gameInfo.play.mBgS.Release(temp_r4);
        }
    }
    temp_r4_2 = this->mpBgW2;
    if (temp_r4_2 != NULL) {
        temp_r0_2 = temp_r4_2->GetId();
        if ((temp_r0_2 >= 0) && (temp_r0_2 < 0x100)) {
            var_r0_2 = 1;
        } else {
            var_r0_2 = 0;
        }
        if (var_r0_2 != 0) {
            g_dComIfG_gameInfo.play.mBgS.Release(temp_r4_2);
        }
    }
    return TRUE;
}

/* 0000013C-0000015C       .text CheckCreateHeap__FP10fopAc_ac_c */
static BOOL CheckCreateHeap(fopAc_ac_c* i_this) {
    return static_cast<daToge_c*>(i_this)->CreateHeap();
}

/* 0000015C-00000290       .text CreateHeap__8daToge_cFv */
BOOL daToge_c::CreateHeap() {
    J3DModelData* modelData = (J3DModelData*)dComIfG_getObjectRes(m_arcname, 0x4);
    // static void* i = resInfo->getRes(4);
    JUT_ASSERT(0x11A, modelData != 0);

    mpModel = mDoExt_J3DModel__create(modelData, 0x80000U, 0x11000002U);

    if (!mpModel) {
        return false;
    }

    mpModel->setUserArea((u32)this);

    this->mpBgW1 = dBgW_NewSet((cBgD_t*)dComIfG_getObjectRes(m_arcname, 7), cBgW::MOVE_BG_e, &mtx1);
    this->mpBgW2 = dBgW_NewSet((cBgD_t*)dComIfG_getObjectRes(m_arcname, 8), cBgW::MOVE_BG_e, &mtx2);

    if (((cBgW*)this->mpBgW1 == NULL) || ((cBgW*)this->mpBgW2 == NULL)) {
        return 0;
    }
    return 1;
}

/* 00000290-00000348       .text nodeCallBack__FP7J3DNodei */
static BOOL nodeCallBack(J3DNode* node, int timing) {
    if (timing == 0) {
        J3DJoint* joint = (J3DJoint*)node;
        u32 jntNo = joint->getJntNo();
        J3DModel* model = j3dSys.getModel();
        daToge_c* i_this = (daToge_c*)model->getUserArea();
        if (i_this != NULL) {
            mDoMtx_stack_c::copy(model->getAnmMtx(jntNo));
            mDoMtx_stack_c::transM(0.0f, i_this->unk470, 0.0f);
            model->setAnmMtx(jntNo, mDoMtx_stack_c::get());

            mDoMtx_copy(mDoMtx_stack_c::get(), j3dSys.mCurrentMtx);
            mDoMtx_copy(mDoMtx_stack_c::get(), i_this->mtx2);
        }
    }

    return TRUE;
}

/* 00000348-000004F4       .text Create__8daToge_cFv */
s32 daToge_c::Create() {
    cullMtx = mpModel->mBaseTransformMtx;
    f32 scaleZ = scale.z;
    f32 scaleX = scale.x;
    fopAcM_setCullSizeBox(this, 0xC2A00000, 0.0f, 0xC2A00000, 0x42A00000, 0x42F00000, 0x42A00000);
    mStts.Init(0xFF, 0xFF, this);

    mCyl.Set(l_cyl_src);
    mCyl.SetStts(&mStts);

    this->mSwitchNo = daToge_prm::getSwitchNo(this);

    if (dComIfGs_isSwitch(this->mSwitchNo, fopAcM_GetHomeRoomNo(this))) {
        this->unk470 = m_y_min;
        this->unk484 = 2;
    }

    set_mtx();
    cMtx_copy(mtx1, mtx2);

    JUTNameTab* jointName = mpModel->getModelData()->getJointName();
    for (u16 i = 0; i < mpModel->getModelData()->getJointNum(); i++) {
        if (strcmp("toge", jointName->getName(i)) == 0) {
            mpModel->getModelData()->getJointNodePointer(i)->setCallBack(nodeCallBack);
            break;
        }
    }

    mpModel->calc();

    dComIfG_Bgsp()->Regist(mpBgW1, this);
    dComIfG_Bgsp()->Regist(mpBgW2, this);

    mpBgW1->Move();
    mpBgW2->Move();

    return 1;
}

/* 000004F4-00000620       .text _create__8daToge_cFv */
s32 daToge_c::_create() {
    fopAcM_SetupActor(this, daToge_c);

    s32 ret = dComIfG_resLoad(&m_Phs, m_arcname);

    if (ret == cPhs_COMPLEATE_e) {
        if (!fopAcM_entrySolidHeap(this, CheckCreateHeap, 0x1400)) {
            return cPhs_ERROR_e;
        }

        Create();
    }

    return ret;
}

/* 000007D8-00000868       .text set_mtx__8daToge_cFv */
void daToge_c::set_mtx() {
    mpModel->setBaseScale(scale);
    MTXTrans(mDoMtx_stack_c::get(), current.pos.x, current.pos.y, current.pos.z);
    mDoMtx_stack_c::YrotM(current.angle.y);

    MTXCopy(mDoMtx_stack_c::get(), mpModel->mBaseTransformMtx);
    MTXCopy(mDoMtx_stack_c::get(), mtx1);
}

/* 00000868-000009F4       .text _execute__8daToge_cFv */
BOOL daToge_c::_execute() {
    /* Nonmatching */
}

/* 000009F4-00000A78       .text set_collision__8daToge_cFv */
void daToge_c::set_collision() {
    /* Nonmatching */
}

/* 00000A78-00000AE0       .text search_wind__8daToge_cFv */
void daToge_c::search_wind() {
    s16 sp8;
    s32 temp_cr0_eq;
    s32 var_r0;
    fopAc_ac_c* temp_r3;

    sp8 = 0x189;
    temp_r3 = fopAcM_Search((fopAcIt_JudgeFunc)&fpcSch_JudgeForPName, &sp8);

    if (temp_r3 != NULL) {
        this->unk480 = fopAcM_GetID(temp_r3);
    } else {
        this->unk480 = -1;
    }
    /*temp_cr0_eq = temp_r3 == NULL;
    if (temp_cr0_eq == 0) {
        if (temp_cr0_eq == 0) {
            var_r0 = temp_r3->mBsPcId;
        } else {
            var_r0 = -1;
        }
        this->unk480 = var_r0;
        return;
    }*/
}

/* 00000AE0-00000C1C       .text toge_move__8daToge_cFv */
void daToge_c::toge_move() {
    /* Nonmatching */
}

/* 00000C1C-00000CA4       .text toge_seStart__8daToge_cFUl */
void daToge_c::toge_seStart(unsigned long) {
    /* Nonmatching */
}

/* 00000CA4-00000D44       .text _draw__8daToge_cFv */
BOOL daToge_c::_draw() {
    /* Nonmatching */
}

/* 00000D44-00000D64       .text daToge_Create__FPv */
static s32 daToge_Create(void* i_this) {
    return static_cast<daToge_c*>(i_this)->_create();
}

/* 00000D64-00000D84       .text daToge_Delete__FPv */
static BOOL daToge_Delete(void* i_this) {
    return static_cast<daToge_c*>(i_this)->_delete();
}

/* 00000D84-00000DA4       .text daToge_Draw__FPv */
static BOOL daToge_Draw(void* i_this) {
    return static_cast<daToge_c*>(i_this)->_draw();
}

/* 00000DA4-00000DC4       .text daToge_Execute__FPv */
static BOOL daToge_Execute(void* i_this) {
    return static_cast<daToge_c*>(i_this)->_execute();
}

/* 00000DC4-00000DCC       .text daToge_IsDelete__FPv */
static BOOL daToge_IsDelete(void*) {
    return TRUE;
}

static actor_method_class daTogeMethodTable = {
    (process_method_func)daToge_Create,  (process_method_func)daToge_Delete,
    (process_method_func)daToge_Execute, (process_method_func)daToge_IsDelete,
    (process_method_func)daToge_Draw,
};

// actor_process_profile_definition g_profile_TOGE = {
//     /* LayerID      */ fpcLy_CURRENT_e,
//     /* ListID       */ 7,
//     /* ListPrio     */ fpcPi_CURRENT_e,
//     sub_method: &daTogeMethodTable,
// };
